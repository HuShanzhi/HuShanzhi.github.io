<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>火电工艺流程</title>
    <link href="/2025/09/10/%E7%81%AB%E7%94%B5%E5%B7%A5%E8%89%BA%E6%B5%81%E7%A8%8B/"/>
    <url>/2025/09/10/%E7%81%AB%E7%94%B5%E5%B7%A5%E8%89%BA%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="be9e5022135e35b3d2ce87147873c1420ad6a258d95fd355cc87d968c86d1c9d">529bc8f933033e58292bc8056b5ce8eed2a76e3127c42668f8dbcd70c8407a562dd11d45b14ab52e5d8e4f14a89c8c8e6c7da018da50280fdfc0024d9b0952b994eb93344a2f43f756f5f64d0f84238260bcc99bee2a032dbabf3123f22a83ca4aa6783481b8377fbdfed833e7a21d1765f5c3aeb753004538384e7bdfe0fc793a2a579cf0952330d9bec005fcc587dd9f48623027529e212755b6da2461caba81f3668350f09ea518c51567908c1acb59647b91a1c85e27afd4943817c6547f70723abfbf0097b0f80112424d80a0b17d7f50318b5fb14ff238a1a92d8877f3fd03e2d47ba15c39240dd2ef6a69282683a6db4aaa8622e1f8ad9974569adba7133532524c89c385a46816cebe7e68bcc6d7fbb33abd5c3bd8117dc9f2edd3d44d3e764ef6f646e399c5d45a1c4eb51e01c174e83131eb2c30397f338f405d29fcea4428c2069d44a98a237e13cdea8c47b74f1174bb52ef1ba2d24c006a8a0a337c52f501db7f90f5fe93f3c2bbd368e3ecac8a6710a58532f25f8758d155df38da370ba82945bb42e73d2b286892fe5e64e82f300d51a1feb2d3f542f9e04e0dfe0d1dd9dc7e880152a613f67fa13b791e2ee234710445d7dbbbfc045b3745002ce3b64639c6e01b3e8970d8f0de04e1f71dc9d8269f29e06d80db2a857aaeb4ef8dab18430de68938f93a3a8ea403741146ef484b5b82c21877784241168621710805e054146b5a6ba8903b2c44903dab333c0afb12f8f73ebce9d6a0972d6ac72fa7eeec487b2049a077a0f4240018945a55b31883dfd1b31c0117c0d86e212889bcfa2c3725df9b1e6ce6286c61cb84170c66ef97f5d97d6bb7d9ccae80507dee517e1cfe530a890892e415cc2bc43d170cba4122649f0a2f9fdc94ed2b4df59dcba2fe7cdaa27e268869fdf1f111084fab1fa2a0ee478c85136df43e0cc9d5a3ee347f826486a73dfc9962d7faf982420194c43920ee1f6988c70a8fb271644bcb68a4d1ddcecc27c3c45a403fb43327cf10b09712966e7dd68e9199cd68be0d1c74f05ea2dab1e37679db1c424391041a2226a2b74d97105de365fc9bb751590904c7623e4cfc6394da80eba46927478953a5e008d207dff56a006cf060e751a0d0485638c59276eecf078eea8b9b884e6e2c81765bdd985fae0a2fb3a70c10246112ca5dc831126436e92409e74a70541b7bd7735e9b2e6325c07ba6a235ab568d734f41f26b6f94facbec009f5b463a728b7b1076aafc4a7285a09acb63dfdaed9648a7b794de5e8580ffaa17173bf1fb167eaaf3cede5fe7d9ef43a5c0528a7a4afaa20ddeb4734aa3efece4030f3a128106edbdd0a4efd58484cb432544ca3b36c4d6b11c4d197c85c70d4e57c4bf01843cc6a951394cdabd9dca309c0eff3544898cbbecd3537d5e5b7419f21feccf81b8e02955a23c19710f43e3b6a5d65bccd11afee40c261fa0d4cda635414bcf0909f17ce3c76df275f84325ffc79acd1839082e37704e2b583dc9d5cbcfde8cf6a7d4d89dde9a0a2c89c93af1163a36837f84a974ea9d651a59c6b06b04b380f302150780d6448e959bc371ed3cb760f48ed24a458f66146620acba0473477d0f224e99dbddfb088dff7ed245ac7bb31e43f1921d74beaa545deed5612b5114b0e825afb5796a869f746d99f59529b71e82259cc3b383ccb4d0ccc66b61016e2140c582139a681547fd90eafc24fcb6380544446625b15fa3b79657e875c97a1d6ada68c11049d2900567d5645b64e021980fb7d02f074ed23e9e744d783d17b0be3a27eb18a87ee1fea50605047e1b073e36d5f3c18dc66d4babb1a1efc48c6c6079ca7cda1422c7011f563a04b71185113fe3b112e82d3ca2b27bbcc34c4e1f58b9cad6d01f56fc149fff6554d96823c5ebf6ce92a81ac0a176489c76a8daadd17f14ecf72dcdb299d432356dbc530dab72c7306952e835f840531cb2aab7307726426fbbdc3899056d265e6bd1ed36ee36366d0031e3e09dd33772325ad065dabbf7572b45ac2233bc0e7b03c9a56cf71aade356f5aa149dbcfcdfad8ed3759817bf9b163198927ed2f3f61305207521355925eca4af16e71f20fa27bb0afa4d3769e94bbd89f669d9857b9c53430c991575804373078ff6e2bd50b36ba737fcb73f8530469ecc011627e68cc66e158cc120b714af4f889fb0fb55fc88620537ec6997685bc45c3ff634960a89e33a1234ce8191806ac6c40b8aec6d8c1aded51a2e72bd244cedbb1de8458cd1dbf65e81440079f2476afa0f49ef13d39b1ae60fe1261cdb368f648c77aba8bf13811587e4091dbf01b03916c888a18a163b0673f5a0876fa0cd65f8951198bbe3e95a7f83e02657734181a7eccea2e340a960d4561c503a45f172180f5b4e9af6afc8fb27bd69ff2e44c9f5078472392eb39d8869e8a9deb797f427be9ddf84504137b3b7d5e07c3b94155d21dc6aa7e0e1c27b01a93b63cf9881efd73fa4a98b6996154e8cd3a3f088d404c47d111bd0819277232d2cebcd18d89cc4b023736757c44f76665084341b9cb8db1720a77a518f3b975929593375fe00e4ce9036259cd86d7a9257a439bfd5502385910d166e3f6b821d7197ed5a60364fadad2e27231fc26a1abe96b886ed094cf43607b7a8df53f0c278c8fbe8c157d58b8cbeafb1a2b68d00732ffb094af898e471bfa6d2594fe07621ec696bd3795ba64f0aa01589c1a765758e9c3184729cabfa3f504a77b3bcfc04325abcb2169cd58e8e9ea346dcac0572af71af24baa2d38eebb529a708422d5a4a086daa30f0db75e1a98a4207c3cf92559a4cdcd3502e4bdb28280b3cc781a8721a92bad2796d420801fa122e1f22e91c6a05558c07881257bbb0984a96995b9c8feb0b6104306059fe4f707c7476ff79373643f2098f85d1b3ac88056e8215c1a13ca15e97d18f6a2b47aff4e2dae3b3c9af91e8512d0da4299fbb080ce50e9fd4354f9a1f9592f304372007393a7104c6150b2b3b3a5dc5e2133b28cbfbf66645ca4a21a6bb66b7666194da727a6c303953795a5e0271ba042dc818cf464039b19423141105eb340f30fbce2bcee411ae97b7841d840dfbe1209d3b4156f85805aa269a0240b9d061d9ebe6a670e904cddec3a797ceef8ea27d7d15143293a6397aa23a50f9c779e1505c0f01e68ecd5416d1202bf754700f26ebc42a49e46986b37805bd7c31ff664e62e5e2428563371e365604b932e6264b93d5264de1e9ddf3ffc41b92dae9e92ef6b10874c55be510876c18b6ffe59c0e17cb216ad0f0c68e1f0f057aef0db543f94c7854ea8cb0e2f4e48db02a491f5034fa8871848203f8f5036bab8eaf2a7dfa43f6da540e78781fa1bbd5877f8c2a79d967a8aedd34c33a98c2368e6281e4064cfab1469a2fa2e765bc361f1a436bb471735e488199cf6d157bd533e5e5a4d6f731f2765ab03bec42c889af558b7f4203dd2a404ede7156ed441ec91d77af1313ebe47f0fe8e0a53df84e5e37cdeda193d31e7a00c84088aa86f7aec36ba597cfb2a7b45846997b49230432a142e74bfea6d01506b20c19505582bae6e6913f2b93e7b90e6626565925a88e9509ec9746e789fb7f3904de87f4b38c6b0794bdb25898f040a710e86bdbd1a321531146bd4ed3e2f7f8ec1a8581e49d5e8b0a36d1890f25225637c02b9f198da23e0ded8be3fc6a08718c87f6cd55b430f1297d622bbb0c8ea3abd6efed48a265a6b242374d90956fcb7eae609169cbfd666623a092266721bce3ee9ca7f623ce6e63bddfe4ca5c77ab8df7d25db6e84c94fe463724cd15609733821cecc6d9bc18057fe230cfa43b78a979de8af9c332ae817707a96296bfc9dd10fc02778620d05dbfcc37a1da229f97eff10e889096fc353e60c1490b9c6a8e703cc318117fe21a8eabc3955b34a1a1a7103ca964e729e48fc27c47051d9f57ba2b4b79dff550d81ffae9fc959a37c35cf827c960041a9b119f84867b6f7955b63bc7adb3f53d3fc954f02bc32b298a59afc3d4ef24d55a5291188b57ae355e0b133eeaaa5b0096c2d1f8972e6814dd734dafb1df022b96aeaa886166b98cc715bc6ed9a1ca8188f102487491d6623a1557f0f35d53d00c61869de8891f1270888aed4285c89688786c3c3ebe2fc5b7be9aab08331404ad7cef6a3bf7edb92a6a14cdeadab205c897e5571bef5995ed24be1784569859edb84fa034ba06ebdd5611f131a6b6f63bac5e17194f1d380d31f02e2b583c65c57487d0b0578a2600ef38ece342554f079e5740a55ef13c32ba91faab01ed7289e977f26512607b9586edb5610a299839c1294e1bfca3d3847d15818c739f868c73fe9c34a814212e1f1a4398047e961835ede00d1ec656b3305505310a6711cdfd7822c6e18c1b5dd205d1587273aa5c10323814696b692f6bd13d05e5f7f4b4c1b2a87e4c047dd53fe9e179a9f37b5d8873c256c21952c365017c0e65d6e3fb2fba66120c387aacf6f165cc17dbaf6c38fa35f8a84c6ac25337edf170bd8cb087e64e1032fabdb23866feb6bbaad07feab3e4685227af778a190edf37b5b83143d964aef659c1f57d875af14abc3318c889a8e7a9f50a6413b635193919a668ff51280af9d6ce9c99a2323ab8f7229503d07a26f859cdc09e1b767519c7d5c4489c52714ba49c89b8599b3bfd4b51241427a80ad1d6e0ae09380895dfc5fa998895e7f492846e4d852ed89e17e441c0c4aab9c170fb014ecf7f6c19fd314b8a7498df562238924a838e0b5a0d56a2b4f71fea2e6860c24f438f977caa724834153cbf04c88c691e7ad76ecea974be3353697ced40084e6cb609531ceda4f4b1401efe5478705f2f47bbcf12556fc500ba7c1e999fd7206677a84b728c57d031a0460791efbfce27f53ed223cb2f3500aa8022976238025c16137cc175ea1d9509b79da3e95657d623cd2d91cc090895cdc1a68e0196339fe295f203de858c871acf6d32bd7f1a4da08257ca2b450c51e70ca861f9fd1e91f64c4b65a42615f161e937b1d24a79c99ee626e83ffd7e009c2f26acfb3c8a3da0df878593fe666e05044fac5e3032dd27a8c3b2db034bb9751030e3440249dbd2b5778c118708933fd310c13db9a01bf43d1e725707cdb7843fdd881224fda912136150681b6391c138728580c37f3c2793bfa417bc99990f24e48d010dc9d88d1786a0229f450ff30e130b4a98e604ac255d6d4e65b94211e4d378a4bac9e673bfec80fd37947d331d31e6f7ac4789980c375f2f6a4c65c5543930f9aaeb1785a9a1cf5efa8bcb0924b013a0bbee9be637f1cc8a28d5f06649aed25440cccd656714299e05a01c8d6f348489b4bc81df66de02ed92f77d9c1e0529fc21cf8ab907ecee57c54f62d06c74eff48481663133e3ea595dd83fbf051395d4e40683c6d2798b3ed4ad154d2adeb79c40a8fba0325bbba6d813460433768ea65816473e2483111f8931c12ebc567fe5dc054a33d61568f04c1712504e38c51087fa3375e9e19b09cedfc2dd230809fe1bfa4c53a3e4630ce0497fc9951863d80921fb40e62d705ead6062168d97b027ceabd681099d1cb50a3664e9945bdc1424e1e5964cb4d195160161a4c7640b5a048a252033d44650b4acf1bfd450c589b197abedb3c8f5925226a7341ca8381bd9ba1e514ece58fa0a92c6462e46f2852de414ceca7aa634e5515905414442bbb5d8582297a063e24a9e986d9102800ccbfb89d4dbdeb614eead14e9e268f9dfe7d5e0240070fafa3ce76f12b08160cd52602858bbe5e24632e3985db1779f42eac7201aeaa05ce4b070a41e80735c8474b350cfa422981692d81eba3494f23832f66ae2d3d33d3ec8e3025c66a76ccf81bbd6a89758854698328dafbe6fe84e93fc1fe1fff534b5abb50851715e972b317ed074108fa4a2e642b4c2d077f1bbc5bb372a2d666eb78335f59dffc54b3b645889c911994f5bb12279da4a1b111bca612cef3033d0e123b3c47ba93c2ae4f716a2597a09acc2d477aa2b3188f4d16332766dd9cdbc663a92761b0bd9e5bac369a88abb637983c34cdbac72c95a1d2fc4c75af8abaacef69b3ea268b9d68dc0f6c4d3bdcef26bbcd41a6d28df5deedc1804dfa59e5888f1a9450696de83bd1439c20da3ee0b305e88c1081d26d64dff2d306912bcd5bb5c2fc8904ca21b2edaa082dea3c68acfb16c6554d01ef75896bcfea0d0cd30c2f43a65a2a0066a0b48489b543348bb4ee8a6998c20a7844c77ef9e5956ee4a7d7704611d27fd7cc975a50821c7d23f6d8a7c0b1a46e161d7528ea5202244c458ce20057c2c71b19d2693d5086b3349835437ac8c81daba3496c6233c49a21ba4cca1ce0d262e4585f4b42408a8b391d3ce64fb6d1d6de84abcc9ac5c829de20b0e9423d3a41ee8cb355fa64ea117ab9bdfcc06456ea69bfed792ef27387115e22dd7b55429e05ec0b024602a063bc7b53714c5960f670a16b11417aa235f14ca778e61f1a44536fac063612390019ededa3e573e91fa4d983092c7f6fe74142cad344fe38b5c63e2679ed6ad877f1d0fdc0c112f851aafcef93f50011b275fc1986b80d02deb9434ac5bd33aaaae83622ba50fdde44fdf4494ed91873b7b8b6ba24e40592ea2dfb244104b36cb7eefca262ec6aaa72c0a08ae34fc4f9d779dac18f0fcb3de4b921a384039793d03f3fcdda8e5f1690d7558a22a4ed642e0899d06183f30933fa7d2abcf48e7d5d92474ae2e97ac861586de0bcc049f2c55be6b77e43d5035d1a485825fc2f57b8feeb2fe3c55fcc09a501f3c18df17d0cc04fd8b384dc5c1ab04e453ba806ef87dff3509212aa4a4dcb25afcdd4691c86550d0368507bec5e4b49c8b3c58a0f6b540185b96c9a58ed8a2b17f257dfc871649869f19b07b8c57a19462f0cf25ab05435dbc1640e16274210e3803c5e8a54256464da24d1e652a3b7921bcc97f22c695db27c32bb180b141bc350587b49e3233b4254dbbe741455bb101a075bc0cd8e209abde89ca6ea87c166b26f7a75588ef4386261237d2c43c1a840484b2b1b3fc27f0e2309f8dac80848efdaea7e47703fc86a2c3cbdd4a1a80891ca02b2ade5cc746eae02fda143f3c7ced5a38e864323bc8da72f4a164e39de1d084552fe0e479f88f7efb1f46be1ef5349865fac34765f469a3f2d8663b88dfc44788d8b3e434e759e6cbc8e855e1d9942be72326760e8f41642e67f63de607c5c294daf4018ebb9a3ef25d68c8749a327783855b8a7905aa4884a8184603ccbaf2360b6e16f22684ee39d0014fd1db3c0aebd27134df5673b2a5db7cebd6fd7b84f10e1209dc427fcf9ee410e54007d0cbcd4d28d8bb68390c4264a31c038e0a4d1eb062b83474be97cdb7a34953a5570ef03e8c884c0bdf50d0740e33191b2281db86138b44eefefa8e4316fdff2c46fc79bdc115c48bb822cff004c0bf5339404860f9230cb56812c55958db02d7d74de22dafaff023569ca75abd6966d1c92e915a4a2804cdb1694ecff95cd52372c3f9db64914513ba74bd1611149f2f9fcc34ddcfd1a520c700d19b071d2f213ab557c449eb2df17d1d8565003cc6092125db09bc12e838d14f8dfe3315d5b0b6b611f6120a2b1f088f0ce477af447a7603337e00de9307996e556d97a4f5d4520bab9825a866b1737b57ec289a05029fcc9ee80b1c0bbad4aad7ccafed2978dece3cb2e84e2c68083a75b46ed684e5bb573955b37f45599b97dc3554a03ab6ca924b0a54623aa3f2eca1bf8e72eeb498ffe95fdb8bfcfdbb0aacdc177dc0bb0b2cfc2bfbd99c8cbc6370c912353fb1f5cdc077e423e513adbf626521fae9c92166103e8ecbe1f9d3109048cec8734c68328dc33db3f2c4c559b27c3aed11936d36c4802db3556b37d5364b512b5ef0a669e0789e492dfa81b4a5b5e5d9fb5b3fd6a44ddaf9a9b413c0a0f8bd73c7b9d743a597c3c854c1c4a274b7eeb3bab8d9f0a7f61a300f55de2cabc3b17734e49e45a2be3f2dfc8b9112bbdf7ea95b60063e2e8cc027f22e9980c00b30d38cfc72f4c802db78548ea27268f069a62e51992aeddf41d2894d6b5010f9b51d465d87e1f988eb922a9622c389cb1f2c92bac24b3c342074df46a1eaac7caba3f7032deabcd794ecede17322b00660ff670522e62d9ab65294072f875cd6c1bce25054f799f068a232122346b56ed5bc712f88b12ee97820df184e7936d9773bb94ee372a017191a0c23ae192e3348a3c45dc665302264d6bf41603f62cf22829aad921c1bb2eeed565bd2797c2a6b18fcc8af8a95c649787c727b45f2d139cb70ce9060a0274e8d0c8ae8693889ff14470312c57a9029cb123f3bac1cf0523443bc01255311aa5b50326b385159a111a4d18bdd191b9e2899332706d1f66af3ffdd0e5b5b79869f532b9e78dcc817e9c7fbe95ecd779146d3387b40a15ba88c2bb048e3aba078f1595c056f39e00264f0a11cd9220cbb2f6eddb21f4a9a8fa83ed38a7f67a61b86a0ab4ec4d48d32ffc2064cd87689903160f15345cb2fa1d1bbec43c925cbe78056adf5e1e3921c0d4c5ee1e17e044da869e37898c66a2eba327da2adabe35ba361555f2f15178ae1acd037431716f330813547756fa424bd6dd475ab602853bdbb304fcb44a0a294e61c47bc7228fb9a4c601438742a99ec1fd995f5b54b1e8d85a60dcad3c7d2ab1c5a9a16b1828fb5e5b860f491ac8a7c236b12083dba5ff62b67d79e0bd79d44647bab7109fcd5c4ce2c5effc2129424e5d5a4151d60889683fc13249eaa0ae4192c4aec1abee61f3e894d963cafcfe656e21909260c2c4be102f14ae23e7fac28d55e028fb0231ad62b0348016a62b9eb2963bedda84195c0eea2ad9f5cf2e71760f3cc377028c43d20f42c319992bf6e58c608eb049c600d64ed023fdbd1098e5b5d750a06fdf51c964ee83baf69815187f1fe8e8f47848e804395595c11a8a62d16d1476e1d4bc16fe20e6ccbb4201c4fb57320c4ac6169f3d13b1f1ccfd4b6d54d4768ee625e54ad94215a977c830e257eb7fb2b0efd2b1a00aef6cd05a11c42081f5c9a176d71f60681bc11ba2cb533d84d6e24f24d351df587cc521dd8d1916074443bfb2f78257752b5f5521b38517e6e5cd37becca544090fc09e73138542aef1ad5dcce46ec18b16bfaad446116be8b5468a4cff64436297cb18204bcf0f34fba0837db5cfcd3e788a6b1a5898a21ab58324ba7cb87a057f3224f2ae4c89d5d6048ca76b05b769908b1a124b5219c3f02ba928ae92cc9c86e3048ec31752c521d22bbd5a26ac09ead06383490a66a2cacc4fd509f1ab82118b70d5ff4f0edaf3c3cb7d1745f0498e29b7a9a742bc6dbd224f9159b372280e434d3f3741ea481388e725cb8b325aeb3d20c4790f84a109dce8cbe7bd3648d323d84fb95ab28ef6f148c9c4707292ee22183073d08e7d4adff0f5ea81df8b3c21b5f0579b1714329e0cf2dda0d479114997899987fac5726c21081978be0bbdc61bd7ce3efea75b3ad85bb974735423e006d30cffb78e1cead8f155cb5b1af494bd64388bc72f86f731355c948b0e8b5ea3ad24f49c0978c6377e01ced3e2921ca7b0edd447834218d6fae16fd02e790341433950cf9e6262d36a093b09c45998bf31896a36ffee9117c4f37a2d6f1c2d2013e9c1942a04f378eeec639bd9ee2a2668b2ca7f177d2e04f8c451fd3d4ba86fc9ffe1ee7717056747a5270fe971fd66c1fbfbbe07691226ac44d9175eb5cf6035225dcbcaf04a001746c7086dbc16804603f24eec9e8e6f8c0596b04cc20eaf2b2c1f87ce8321ecb64f3b7664fb405b0fbd8617dd2caf20b4cbdccbbef609c41fc895ae9cfdce1fae15b6cd4e2fd834be45d7fe849282a751acb7428027336660d4320810d50e7d6e9e396a53ae77eb248e22113dd74a17ad061556aa5fc5e6b6e3477d5bdcdfca449a72ee5546ab3d7127a9783da18dedca7ac637f8d29b56c89cda1b9264636439df45dd8f607b82c3e76de183bf2daafb6296ddfb14ee1138cf6b8a645feb11e5adb8d43503b65bb4ca03d49994fbdcdb68d38bae74f043a37bf0b7fc5298ef577607dd79f8813c1e8bf7469aab1dd83dd342acc9d7f611c976296f41e3bcdfd1d1ebadf06a3fdb786635ff57e6691669ec49317b77ba4af6ca53411d50feea0caa9f5ed98fda09dc027ac41a5fd212daa9319b3612efdd8d1801c463f9ff839d1146e3bdb1a7260aab7f3700fada2eb3e1f657d9e8e51adce11c7923a38a08f69d1bebbbcec74fdad5fc4634bc959b8ddc32d6456de482f5500212dc6fd8b2173eff85d0a4a3ee97983e71cf6d989cb8184383c82d7c934e307689666864ec62dc5e56fae212331ddaba1a41fc2e6fc28ab7f94c46eb66217c09e1421d03d7625eb7b8c946b7ebe3cee32d790f49685bd6221bc051c5489da3519bd5a0c747f97f257424960d1db74ce8f7e0bf2a290d207232ba945ed6f4d65337bc9d786e95b006bf0038fd2397a28da49057ec80d15466c0323fb67f881635ed0fb34962d2895d84940d1c86c25005b6095105d5169f8ff095f46e9e3179c0f82cba1e57b3a8d9f1ec18808cd91f39e4ad6b1cbdd74b3d60dc7c5c034d5c8abb0f69daa2261b23c24d98f537328071451417eedbbe13de92a5ca3775efe94a6ad8d411970c34c0af57bee8bc372df11cf250ce38d198b2d0e7f2887d5dcf49bfb524bf7d640f0b04c8c05289aac4cb7be322c6558b86baefcb285b4deef22b9f4516e649cc3972357b26947a7b3a1dee47573f941088a070939c56d2d16435e99128ba7e9b4fab93acca0897a8097226f6793f78325d0c0aedf475ae38b4e0ab03d229b6c4eacd48482e8f5111aa4d5cb06a70013a4beb070b7121c672bd3af2e2664b1314d4fd1d880d28ff1015d03057ef11e4b4cd6963922c6818e348d86238a108dee3a361b87703c9f05c461592019878dde50eab6264ad4fee7df094466b2e5f17c6ffae60abf9a0773ca3974010318fbb2563313c584ce73e99d3e66b1c81818d60e29ccc68a0b3af4c5c99d0d1ee5453e3fd2a5e26e33802c555565bb2eeea3842b3f3e28b7b3862ef9e65a1d2f166baf1d4b6037b7adb74c55f0057c271ca4f35b4a218eef543af8198e50b21cd62924ed7084476f8e055322e4094bf2fa4913e6eaf02fa1869c3efe69611dff39f18f23052a63227e942c26e7e485ba945cbcad15a8a8b76aa91150680ea359988668405716e95cf8f6ba8a2746eba6db672056281a91d782726cd534a9bc03e3204e3a6b692b3760c9f7eccfecaf8530bd9c7ab8beed75dc63b9dc89dbbd05d66961924361d27679d766cbf9f8e537ed1dd32874a173448e1911c0416a40b3a26d58f0d11dd3f3933f4ea5bf118c490ed6d740574ac11c50fed3b2951800f9fce794987100a01e72ec9e4ba246155a973c537156c4d2095f174f71125419fef9c173a68cacc5878c528c636bd02cf100b9cf77e1a9f55e2dcdd8d49a848b720346c719109b675c21da8d7100270697ebad2de223a3543f42f69a9f895bb64a1acbf12069bfb7adc40f0fca0c2e3aceff5005ffdfee3ffc7b6be72c836751c939e433e1e76b8cdd190b4f01f41303e8546cb8ee6178711cac78b6b530995be5fafdd232b827dafdf2a9cc71a9c16eb807087245269f9024bebe8f4f3448f18008be180e26cadb73f865d0073da9d9a1d4d21cc89386b738c1ff766b71578089a2179ea5521080d8db1175bf67eef06b381237ec73fb858eec711e73a9fd92c49558c95d2bf627cbb5f4041162117a2d7ffa55d8e5cd45eeab3697690c3d6f244993c3be8ccbfeb7b43029427b95b4d13b24c86800ac457c0a02638049c2f52eeaf2a10829daabbbe117754e7b5efa6b3acde2b8feb99ca016c2f487dd5a47a39805aa7c68b2d165e40797d4127cd08cd801e6fc6d80129103d0ae16e1a6475694355684f30b271dfeba7839d4e3c11e15dfed5ded97e0b3a1040e9cbd21a690f87d515b33e6e975e3b46b4fc020acfcb7e17a74858c371b996478a9086ed84fbef851035a3accb475e073a0c7f8809e04a08fd000a53edd4d1b2aa5a04a3386c52adfddd9ebe5955903ce637e24d801ba42071277f350eaa0cff3e8b43af5b135b340b4aa2c4edda76ab67d014169d714d22dd160a329597c2aecf3eb5bf16e9b92d4ea54c1a983e7a829f7bfb93108fc0220970e70bfd12085313545a0480378da5eeae998782d2b24bc93c6de08d465118a275e3a5c875b353009496d504817b58880fdb41a027f43131bc8935b2da08d76fb26d37da30bdd9bb6d0128fa07408380124a6d913b0611fca76de1ae9a201b2655b90d535934ae4799ef749522cc23c9aa30a44564740d243af9a8eddbe50a9e7a30b0dc4b3f5f0e5cd788dd85ba80b852a41a10d16049ebd7fca9489e75bc6b76d9c4830eb77fa7ce43b9b1087483c5aa970d56d84c1573b034e680aa6a3afd40e58ffeb2d7df41e7db791663b695c192ccbe645adb9a5c6d75d5a63b2abfe9d9b6a417d13e64391a9460ad476a6f6f4e77d899d1719e1e0761b3c3e14f252c455797a533a3f04147cad6810a343775f574ce5c142bf53e6b636f30442b7a4d6670966bfc620cce3758bf3ab98c4c88127351c707d5b871788ee048acfd5c7c2a431b1d7b89b3c1f9f168c97e96ec98bffb8bce3f8baf21cf1fc8a2faa4cb6612348553ddc215805f913854bd39125e4ae0c19d5de5584000f52009133603550bb1b8f23edcf4e2b5b9eec8de280e14502c701267944e901aa8e422144f1c5ee6eb4525d63f3c8c7eba776e6f9463ac6da2ece11fa0ac640ab375476e6ff8e9e3d4132abbc6d1b1ad17b713ec8114240413221a5225d1b3091c56b7a3e748e41c19704b9e8d9f86643ceb7dcb54aaeb9af5af3b465ed5f40dc0d46fc1b23e1d8780b92bdb77400defc559fb8c1f7c17d335aaf6e81073354e506d7e9af15b7f8036d13b36cbd1433bfb7e3e0a43c2147b2fc586becd3b2755672cfa3833fcffd098ec43c593ea0bf958d2dde06cc3529dad33a76c75ef6d0397518d7eb7150c90995002ae27a1dcf14343652c85afc30a5d858fbfc8d444fc04d8e8e3588155d8e776f5ee21e8a034c514abbe6fd9c33d9ebe6a53b45f501c2420d6bf6a4f36f5b582a9dd9c0c016038b29670cc2b8489546308d14cb99e875b37ffe53f746efe678f58b10807c3e2a45d2318b7f6f0844a0d1e0efdbd5ecd1254714fe4103f0007b74913f2e26c9dba4f4a1cad6de9867097bdb03c920ac34efb3e263c33d6962fb083eddaee5b8ec5f80c5c3b83c75c673ae951ab4a8dd23ea9671dee95cf411c2e3924845a7cbe4d4a0cc53015d75dba08b89f5cf7f28e4d42654f1a7f5ae34f3404ccd5b2056556670da77eb3021f3470c005b939ae3ff06b51fc663a942410b3e033c6e189dc1a94a8538364fda51ba69d40355983bc46e3015582b9c9d70cc56c723883dd6461a2a7285ad273fca4e99f512f881f4b8699e700c4f65cf9d28f6524f70226a0b7ccebd97ce004dbb28c5975edeb097d603b14b9d7e888a701bc41b469b26120537d6b62da4268b4f1823da29a9ab40d01ebd55e2b8fbd0b57f1cb94c9569ed7a4c8b68d5ec3c4e43af1f37d788ff01130d39483b171079b8221c5bdb036d82ce87750cb75cf96e3cc32641f51a9cb9c7b4d501b5c7b4c77ae8b1ed4247baa125009847e8ce014b4880a4a521435846948bda7a7d4c4e6ca05a01422a67c05ddfb620c2a0dde91b462c26a4582af7ba7ef84555330266771d7634bd72ffe0e1f5ef3a5c7551769e7e6873bdb120e9b665bb90ccfd847a47fcaeb91322969f15a4f5789aca64d32e03eb30a1d1dc11473ad671b02db0b9357b4f2c805b5c73dc6674f2de959ccbc655fd0e512479f87d37d50ffb088edf06b5985c0213ef7cd606268e4a1e84e1209c26ed94b26e1c2e13c187b44432200cb1de93c17a83bae3045abe38b97fc6b7f3b66bbe6cd460132ddd1450bf358166b39a11db3718edc108a376b62cee8937062721b260294448ab59c5278d86bc9c6749b3abde6f862000fe757f5b85369ca96bc20a39e94e3126a14b68cd9f9de1f4423949fe7a0780cffe4c119c3af340450d1fdf1046762990ca5b215561974819057cf51c77ce6980083679d3b6c3a2105a23fa7d40912e0a55048142f9afa20db595d19b41387f892dd96419f6f521422ff5db10129f2a6a551c52f592d5117c75250219d66990739afe3e992ed04d8def04403c020315dee19eea506c29d64258cdfa127e366fce89d59a8b68f84ae20ded13f43c9e0b9ac1d0883d9f601a46ff3589846c20e09b050d2d3d205041d5580f7a17dcbda89f7d8bb266836dc3a67531e02988d4ffd22a04d99ac8080e824773e9c89c5d38b7674d628f0dd8222917293a6b0a4e54ee73af944059e15bb65e680112b18e3359e46df228f5d87e75009b4a618caf4ed0b637b930379b8a2fc059133eeebd218a74bfc80afc44b6c961589cd93bef15709988a6cb074aae652bbd835cc199a8f7427666a0634a77c81add42ef836f99ca76f528df6690cf766b58e091334b9c6a07b10aa3b74cb9dfb6983c5ccbea23d37571349090e1c65060b2c20c80c52f6749fc32a1fdff8542c66b8f9b15a808d7eaad743ad2bb3dbc661693b18856920b8fc5d8e696e6af6032fc954b68547d2118c798749a5bb9277a7786a1963d20d4cefe2ed9aed46005b3100dcfdab569cc7ef576cf0e9aa9f55ae1fe86e8162d6a16285c4cebda085b425da4f30f7b88788499be616344137358b1e915d7835fd5419df450eb0132629e3e3fe198e9501d1dcab5b25f1cd17de2af073c3af4c281c848b76ec3b00caf1752612395cf2b5de1529825a2496a432290d9eac2928899eb1e0bd3abc4b7d1dca7faa625d482db41c188c0ff38874227799178538f5fc11c5cf36c95fbbf4c0cab7ce1d2cab809b4e3058ed72ba92da7abdcddc0fd91db4f35243c84af22b1bedf25e0c05a65710c24dcc3abf004c62c0b4819f55133dbf51feaeae4a14934f5bdc77b6ab682d0afc66e92ff049b580e8f627ac2da0923e9dcd41ba7275bed9a841bd3a6959630cad12ae58d2c00bada01faacac11a633a6f8a23c93dd89e0483dd33e6cedbb4434af40b51a70061cdceb481723e6f5c1cc9e8c404a15f5bc1f612173261d2a49f357c28184c4bb5f07fe26d30bc22c4cd5cc47e0a165be1bc62e9d94163f63e8584027dd12ecd82af94a00db968a35645e3b2e285f94343c08fbd3feffa75a24986c47dc7e918b8ef0df6c21618a97dec58109bcad0926a060329285536dff1d5cd95587dff5c7e94c8cfebfa9e52f6e5e163f785cec87036f54ab62d5de2cd91285466198ea1825cd3eec9f34e38582c5a10cb5848b25b03bf5a67760ae61fad8669749d88a17e432ca330f05fa4b3a258adc5706f24c3a3fcdaa50bb335a8473fd845f80044fcac038f9094c5de7e35b52657b8493d7b57709a1a341b77f1439c892e90a1f03b3f8c771e67e1d2ac0ce979b63f920406cb703cddc366eaca109b3d4a778699da4552aedc34140f9c35873256d929eb6032f9ffb404768dbdd19173f5c746ee429211d435a593ea4e60a584bea63f7701e1a6dc22172b52c0a00ac12fa93f2f0bf7e78bb7dce53c912f45159b3828b09ae0f26cdb846d6a42b053d75f88f0cac6a32f8e83fc6926ba5140df901d36182795a8b16560aa122a1e1d8135222891844e46b36e7ea842076304fd496bb2bbf927adda02ca5f08ff59215a27daa6734eab4bd1ea492ab475fbba9191467e766a1ae4e7109734daaa24c465a511801590e76b72558578230716d25967c6aad42c1cdeaaab3dbaa7f9d3c1093ee0f1cdef8147044c4ac6570a83c38875d8547b680ba69c5943f8cbffb6eeee4228a61b5887f9e3d8a18c1b0c9c58ae9957a401403240ecbf93baf8c152513688e54395bfad4f48e5639263d2ce19e4cbbc957972e5400f81ee5a33647ad9dca9ae73f4e5e108ea58623c71f8a242bc9e500ce95047e417a2f62c4fca41e38ea69088ad9100fff4c13cbcb8c922c715a2c68f1ca0f360dcd3abc6f2e1804817ca526377d16f074b8d630330d73db570baea2847bbff5f5447d68fbb7bfc85a573e619f622c1437de0b023bfdb353b3eb55c4fdb42e7bb1bb1ea017ae10f922f0773dbe608eb4e1267df342432db41a35f460e6906b7114d04ef5bf8b7d6154af6d904cc446b35aaef0dcd3e3ba685dd14243d3910e6893feb110e635da35f3273e916bc528748634b86588ba86e7eb50e235b7b67f5c36cd33fcad107b4a38aeafc7da8d59421a950fbc5d0d5ca5a3f5caee90717ea6ceb39d0d8ea23042bdb57924d69100e18dec0972e21dca80e930254afec7850810f8615602a52b976a1c3cc59f6de73e25362106706d1775bb12b381c8a4c7dca352bf86f383a5a76150eb19fe342234f05041f70815ccd8b3108f7fd6de38fb9b8ace97670d87ee7e78d0f80c27765ac84cf3c04d7927184f4f6fb4a56aa9e4d48ca62074e1e3d644fe4a0baba961011c26855c87fadbc4e43df1213a29ce2b59dd6c4c9d3f8c5babe43c9e864dbb1f1512c0fe0ec0ccea8616bea89afefd40fb0b1aa2fd15f7d5453920fd2d1a9d84087b9e37d4d16ed0833a2bd9bce9de677ad2393f93dc08f7dda7daae92662760601eae0539d1ce69c17497c50f7a915d14b4f550fa66c845e5ed8100fc663ec37af53ad4a5be67b54efa61844fa752a86f4daa99f2099caf77cf92a545f5177eab2ee37b8123d0fbb46e97d2cd625eff07e29d4e5693e3a127c1db86040f9072264da33acbdac2106deeb5327cb76d3f5467fc63595170a6f649a67fb3c49aca792ad2f5fe7a3964e86c217b903b5e78be048604b4834dd6d3d32c5e1c4d8506e33349bba8a1acc7d7f9746103ebc30a37ef0985c8cdb6e5fa797f38fc7a61538ba15138dc96750a1680d0abdcf51ea15706e24bb9926ef86e0c72dded62b04a4fa6111eee7382a3d9b7ff8409b067aa7475cdfc4ef1699a50774943088683593016ac691098b438abbd3a4a1b95d5702d4f380c6fef175b25dcf1514eeffeeef131bbb82a1b1cf8f3e2b47764b06d0a1a0e3f9f1d6b90cb5ffd098112a93617658023b1d185fade3fbded1c6bb8f090d278818adf7b224468f04c8b42c4559afc9b0cf847c6f85f352748d2d9e37d2d16b392d51735e40129b6a3ce9ac5e1cd16e780ee1bad73f8132834b60e38d53e3cbe6dbf781e170ee8360158a8cc0580f9bec690e8c95ccc08cc71e3555ce77fee0651d5446037857c4a377859ed913e120d3130a98bd8eb9595cf20ec12ac9828e4712e00909304030a874d315eee6e6d25ee0b310bd4e7d015854b40eaaa713c75e9dea82bc5e2d363d5339069d8bcd209a489fe429a262a9a6649f8d692aab474644bfbab09e7dc4774370c5f7cf76b72ba8b7d390662fb3f948759515a5e172ccfbfa9f7d0bfdfe57fee236e6361b121c361a30557a598d5b6cb712376edd8121bdb26592af78ee0eea6578522d4fc03e056f130e2fb032862bd4fc2b984c48e4b54751cb44f1bd07de354eee60dc45cab9b2d549ee1f6d8c4fa5f69ca5375afd3a17f5da5a52303b2d37413263dcef4f8455e43fc56a7c036a5c26f79940f77fea6a7d4df3f1c58df0e04ccd29403e57d6dabe595ade1e81ef732655a055beaf6741716f713d1ae3b098fa59c5970e865ad6d97c27fc310e081a768c94b543d97c84135ebdd1080b4a77643465f45956592190a436469e206fe625f6959198df803ace86b6467e20e49bf4f30fced5cb1c43c10b08cbd519dcd50956dda1ccc5d156efab6a29f4cf58eb884ad05cee265ff5cc1190f864050cb9fd4ec3ae5a1383318bfaafb2c635fb622651606893ccd94c382d39db54365b16b297397f50d4bb2f96ef49786caaa6ad282f1e7542fe8855c0bbc2b2b7a33c1cab7b09a78168ec4d7ebc39805ebf595c8c05f12fc9b2b5a13eeda128b13301c77fbb3832ce885747c67261da7a3f548992a01e9ee0b0b52ec6b4031d27e8e6d69d2e27f83e7c3085d163661eec9ac7fc987868efe5e8b2c16be6b57607f012e476dd6986eff55708225da6068a6b1dbe0736231883948de465b0dfa95593bcd5f160457453de2de1f40c48003d334a871f2871bae2f026281f898de7bc20f4bcd681095baced2942b366063e8d83f11773c107f8a5ded5e98d39a5959e8f8d9ec46e7ab102a7f9f71610952e5964541f0c2105e152ed724527715959aa76c53465e614f353dc2108c1bcc913e8e5d2de3d6e91e5499f3b992c5b7b737033617353a40d38b927e1644ff5b2a687bece18511f1956716e5cedb95a4add1356f084bb8e1438fa1ffd578122b3401887ce7a8292986a69144c92f993b0942df5fdf5c44471b67d29139c79de6025da7593551c2a498785821337a153d52e8503439113a2f539c25251b003a3573ee616dc726cc1a2f2764c2366f9d3f3aec2e22c3f966d89efaf911692a19c37a2eabfa77eeed419897d5f83eb18a36c11bc6453ff79d01579fdf20efc4fd0e1221ab563c54e86709a2b298c15455108d501c9bde5088b9b6068649a62bcfddae09e934f2ccc9ac35fc26a19989e7c3e443e3fc860dd69bcdf86d87ea9980701ade851386457c0a2d3b032ac2c4a67cccf808d5a4b68420803202642cdab85f3e8e52c5c3d664bc7846e924dcebdb11fbdfdec2eb0c65c833c2cc191a2bc1d261708d932784f0563a5150d616f40ad9d3e62888e388fa2f9d7372b954e638860d688c94522630645dbe5da444d666ce289440c295d48faa11b0c66d964f9d71fea3e3b23516a6285c739abe800a1e0424a407b7358850ff8190ab982a84928ca38f0dda7bd32e6f0d4b4d549c03d6ced1748362a6ede941d3fa5741fc10bbe80ea797d1cbc9cead320cd11171fb9abfdb8e9fdfd68fe0e4bb9af996821afedbd5a978fb112dcb51a014e2b7c20a02a50441e63e85f0feb9846ae8b987cee5658d3372be31bd695f21c6375803c2dea41565d67a7bcf0732fa924c7f9f6705ff7775482b5c8e5f89ec1a971db641100ea03d4072e7faa5693f732dfd4cfc5fdc8860dba059b061634b00681b0e5b184c89ce2a3f6e5575703c3cf7030825f9f742a50934f6fb3bfac405cc52f7da2ab519a4e6376562faa786f4db97cfb7d83c7ad2ca40f1820ea8692211cffde6cdadc8dcbd2381f46b1cf8c59ad9906148c9f073b30cb07d06bc3521f6587f5a99277b0b5b61dcf7cfe218dd9089f0ca968e2d8cf2d6587034c83b654be51d3ed37774c042ffe570225d8475f7aaaeddc9655d9a184c3b353707194b0adf3d05a344877615a615201b11e9fb152d6427732fd8e3a8f0a8b2a15522a1107950dd98e56682f00eb266bc1ecf25422954224ee69d7c8e73fab26b3384e0cf8456cfdfdba19e948e5e661d051e9a57806262b1aa52217bfdee14ee81bd1696feb22c5ba64c2ec5c1a344d9e6686b96108159208e8e30acdf304d94f8a4a13505bb5ea7db4b2957c1cf6238bb3998405c4fd0878c561c3305539878cd5a94ff511561c983f93f95561efe9eefd89bfc0c828ea2c83be8549abdccd99f87aa08d74d7d10afa8d2c9ba24eab7f29f50d0ecb2ce0085ba3bf88cf2c83ca4b850d7b779ac003adc355b2f1674d00e1c3afa97e7ea031da04ac5d219a3abcdef6645765deb02858dc72ad9c5ba591e44e3c83f78dc97f32ea4ade7c49e68cdc38d4855b788c1d3ecfbdcaec6380a78b05c2a943f823d46d328416ac0ddccc651a257f673b81c734e777261a7ec1b5e74111f6da37bf380a1d738951f96ddcc2a67bb22758e412cf07cd953e7c63dd2572af34099f7249acce454dc4944a2dca7c092774516b66851da2a6ed2544021d6a4b6684f2212417e5199dce88ec19d245734482f5bea28360d2a741c7fc63d68d589344a0cea96c07d4ecdc1e98e0cf61395e212286978503d8ef044b510dd983700978970332ccd66bd39d0a19a2282309b0a2527f29034255880ae9ae996486bd57409778dcb89fc89e319c1ce4d1c5e364e517696acd8125eafb73e7cab854fca5371aab9c02cabc02fd52535e01d7be437e05dd44269ee48b9da23677d396a549d0fc532a738b457c300f614504324aa744fdae6dad18da25652256047e84834cdbce042f4419e6d90a89eea2fd5755ed279cde7d4d588f97f06015ec8ab216283c1db38ecf3a1cd1ac50875ffae85abf678f86668f6026b6cff30905c810ad4ffb9da8ce178109fd2e0aa41abda57d88f8b5c3e9950e90b2c51fd06f3e3ffdbb9997c272ffc9d51344af615238d05a93b2984b8c7b3c0365db838daff3c6efd4c1f229a5aea0c61d0973a276da82d5d0e8fc5870b842d6faf68674cabda72fbe47832204f3df0045e1746a27d3f68e248ce36a69ab97b3a0a89d0799a574eb22b92fbf59fb3c4bbfddc32a84caaa1c76b6855f1b8d8b0b5d6fb31609fa7169c692a05ac0c32be72e45df54f291e00809e678a33b488e9fb2183d82af731fc9475404402e2eb8a89e97d78982732e3e60644bc3694b6f2480554e9c573c6f2fccb44d815f9d632ee365a25be993dd53d26fc3634b7b9558bf80c201d0f9cc94f4c33b0ddaca5f31b3da6d43f589132df9becc2efc4c46da3beac028885b3ad9cc6f8362edcacd86bd49714a3973f950e88cc563860559b5365086c676c1e46ef564eaf403020d2b6d8f4e084ae2380cdb4644937198d72ffe03e57c268017996472e9955e70fb924e4411571837bd7336d60704f11c31b1de831e86c2f4749e657d63be63f43589b584718022937aace390a23a2a0c8c772555758f23045b8b3758b8cd8de010ad91df2cc74e4fdd33cc028fb677d69a59ea4a0ad014385385a03962eca1d52f030d701aeafed24bf6a59145e538ca6ef7f0e256a76def7d0536eb045f79219f5627dbf12ecef7f58ca989041add059ab11d551e18e4e5d20edb2996042c828cfcd6f07825f2d78cd5148dafaf48185b08b5427f56aa140431a0c459c65fb16fb95b24afc10e9c1f22ad2afb533afae68a09e82fb56cbb672e080c3a06ca4ac3e042ddf53c014fce51555b154dacf713d66b35284f6c142b67ec05b714e74acd18a79effa8c1fa7659373dbe62c21ede132248034b8ab0e104220a4b627837cbc6a2cbb0da88116c0c2b53fb7fab8439a568fc9ba99e0e4e0de835f50611e23bcae6089fd9b212c1127e01fe5f35c73e1d8942d6b3eb01ac5d1f43adaa84cd271387cf502b23c28f66ce8258ffa03d8df895128986ba00c8b52606bad6dbdb5ed05a751b8335ae6d542a6b2b85aa2b181586c28ee11b5b064ec18706586bb2707a8048918afb148a0c8e1ba2b4a64f2c0094db1eb2acd46899dee50d7722d1f4c8781eafa6c28fdbee9dc00b42fcbec1dad22abc4b2ddf9161d68c94b2b2d666b855c0d0ea0537443305c28c14d260feaa3d8102aa6d87ae5ca6d3ddd1e4a56e0802e4a2b6b0c48518a431509e0eee20f6a58ea8088062ba76472a91c7b4129ad0badd9b53d8aaf49cfed13d87c49f45ef0313a288361e756eed32e7ae181ae1b5821bd97fd7e816b940dd30172e325e12759d5272e9b952d00fb86c6165eaaa6c37a5f2352b4260a98ba963d7b87164ad3f9769186de1c7b8bb9ba9be723f715dc1fd8f0686e1d83912ee6ae839ed9679771ddb78cef107ad8af4208e0952ec1f4464df2e775ca869ee868c5dbd4c6134875d2e5abd1b40df7af6ac903f388d2656ffde55974166c4ee7e5bcb3882a1575d991933b80824ef698c1ac0190ffa29998c5810118043aa14f1b7bd1543bc7b27e57ce8fc271a5a6886ea231fe658a5594478cf56868d550bef67ca9b607d771afdd8376407791eb7b0d13d82c6c64d38733f9d8e4bf4f3968f2b14d43b17f231fbeaece7fa32d1725d9fcbf79ac34c68f5548749e409e075605e249e8750065e36bfd54bc4fbf53c997c5c4c2a394ab63548c2537329d478d36ddc11b57e2b1bee883bc4d3c8b72bb0841640f6e20fd5f46ab60d84999d3b5fe573fda885339374fa59232097bf6b5ea2e08f32829e896e22077538cc14fae405a1693bbbb4f442877135a029f800ad5657a2c8212dea7cbc0f6a091e7a2de9893e3c35106a8457a12a21b2f401deb01e3c01890608debf66892332d172165c30f2b4626427a7ace296a3bfce1959e2f24354a5f574f36e62f866353e7d2269d79757f1886434ece611c4681670b22a557da70ac02f62ca3dcfab3a375bef4541eb3418d352b20603cc37a17b57c23d1bce86efcc6b6a6c294085e74f033300126f048773af736580eb3cfb318f6018a7b06d663d3add2279acf9ad64f9cc437352ab06c6cf995cba82fb4164cc3bacb1de583125c184415fcfff408778a159a4bbd173e55a61c4b68ebc5195969b58710dfd331b15014a5a8134895f273fde843a19e54d61a44d41274152b26740131002369b654f1c93df96f127efeb6a71410d041c36bedcb1e0f730a32401f89be895457d96cf6fbcdd2d2e867de32c10fc8b0e724ffea5d25239e11b75a8200557b024e08bf6367fd7b1a50e583848692c2c237abb574f0e1475ce3ab0503756cd56257a64a664ef92bc95cdf3316b8dac9dd8ca42412e9784ccd6c6decbc345274db8203cda782156648cd66fd5448193bf1691c829eedb70ee4edbfd4d5197ec67e5392d7089dcced266d6185748b6ad001498202627b3f6a19cf91f9add732f578daba3dfff8e8bd00dd2bacabfd4f60b8b5dc6a8a72d484f985c7997ed445ec2651e46bc078d1e2a5377585e3f82cdedfd06599a5c457918d187138d4c0f7efcfa218f40c809656cf4a83e39a4185e6badeae4e50dbbcbe480e838b3df35fa7f1c5f79ff075b3e75a8d2965e9d0a50da702a18818a9d8dc58d368142f79748b5e9a660f7f2057c1885d287568edff1b7d0b22fda2d8b0d6b7f71f28cb9b5d6bdf61f7668e0a7b3c6de2bcd0153e2ade5968e0d58bf2a32699b05cc1f8e5316b433d8320672e66657e4354c3acaae4ce3b1439b55b287ee6fa1f3eb3d5f2409402b880e7953574ccb85bf437e179dcd84f634a26055182f5134c69db8d1396cb3ace6c61dfa6e089f58855f1b9c03ec05259c79090162d3f1d1d8ad2b9efe9bf2eee1437b060416c4bb767ff6af9f2206e6d702ee4ec13f5465541348676207d754d4e3b57ec586b977e75f4bf23d11e6a57f7a945013944aa23f42885e41a9b40ca538f77f243d198f2450127579d12e2fa739367da6760dbb59e536e08a6602b3c65eb1ceaa204ea1b8f2501d9fc669dea660a993d263f8420f30a9b25e591677de8d6a9a5bf6f04ee1f472977d3251b3468395e78271869e0039568f6fc567b6a9ee7e7bdabaedc429012459e0e8cc67df3b3a9252adaab05342d49a149cd4934583d03f99364f0677f7c60df2a96f7737af7350c9c07ec7be57017507944cc240a56e6024482ea90789ca258e5e7136c17e6f32cb3a51b89112930607f14b29b8a4f5afc0b44a50aeb36bbf6b5abdcc2e3094d57138c9fd241b56e2ade3d8ead89b9f85fd969485ac9e34b21bf7d62710cd509827955a9d69474c3d4697c6c7ea97676da22aa18e7582bf4d23e377da157c7336628d6bb3ccb2950a9dbbab984d30fe8e743601a77fdc246e3667b4a77b5b22ef5cec41257c57a8c21dc3b160aa5f89cada46bdf6d5fa0d3f67ff8f13515d945d4f5034da4746400ae8cfc266cf775f58b9de19cf0fe41c07594d120bdc72933fdfe2543a65c9bdba66cdb13f52b898305967fd2dd1d6b9e837c076e94d3889533e6e145bb8935ccf49ed0ce9e12ca18dbdf124cbed0a766c49b9a9318fa6df3421279bd34c27fc4f8a4f10a6cf752069c6433aa08511c821feeccf6d92e99bbf1cc47144ff262f101ce366fe4b93dbd82f509c8a276c77755c61f33e9b208a690b22bf175103c159e6e6151ea52e40c92e19c1f690440a28d4c8e0b1545ca53aec7c3eba9fd2cd67e68e3bbb5948a74e5ec3395ce277568797427c7c54136976b05ea4628cfc255a590fec237e98d548f904f060636fb0dcab4d8acc711656d7268a3bcc065c9f33bf1aef62a5c94a25d5d2e6057fbde9554630f712f1a9df30dcc5465673524d3f316422a23ee8ddf5be72d9b9ff71beb9f879994e058e54c7afa9a91a0f4c10479e6e74b8cc44cbb50bd477d591443ecf2756db4647565a4da28c29f3b757c2b1128339ff72af64e9d92e2e87eb917cbd1d701cc378cb0302a6af01df1659294ac8cd7d42bb7220dea1539e6ac7268722507a901eb3993ee77e087a7fa3eaf662436ac74f21ecbea37769876dcd6a8639b6875f24108988d0bab568db245b984886da05371f52089081179533563c8b05b77268f5e46388c4545a357241c7f8c078d051562cd09060ec6bd5b8b726f58fc56cd5ed4df5d5ec2318b6eb91cbbad2179077395a2ceb55467c8aa3b8cf134b4cf7d32d23564e87075be0ce773563108ecba3ed8a9d7bd38f602187b14cbab0ba77a1f186434dd0ae0ebf388594177b1b9d1fded1a3d8cb9f7a29985551a6f2d65634d0842e1d9fd7b48e12777999fb90ddb937da1ae34252a3ebae2931e1cddfeea104b099287aa36feb50c91febd7b838130e603449b9203648be712305fa6ddb0750e59676ff96e1cf7c39cce500b2e2bbba73d01c28cd7cafdc9b7357ae58607692e52615948736c3f8af0b2f5f23a915aa74d4b686c3a2517a26e8621deab6754c6f62ae29458c8d7adb1f8f1e6a97900816fbef54e2f70ef183d7bdb43f65eb8624113e90be48404a2971a4a7994d5817871f738ed1fdb9bee28a51d6b02bccf7cd5ef0ed2601b822564c7e2a0b3e895313bf327698287e5a3b3cbe48b5a4afa10677c2a8d2069415ffc9ba81724e825735271179e9eb040b128f75df40af24f3dedc548129792afc60a809a1f310faa21745132930fb0bb04a3097cca2bc21a69dbf0e80cadbbb308a4cb000a196b169e7bffaaea1fdc4fa6e9b1aa57d56024a9de9b534d0edd2c1f7683b642c7e9c995d35f9adcb953ea2a2f737a90383e6e39c5c648c06140ca98ddf1176ed1892b63da0774177058e8b4f7f44ec2573fdcf70862d39214a4a7ff70d4952669ccc9ee9bc81bf77402811d2282bec459527beaedc922c7779b5c18f4ca2609c5f71906819248df7c452bb926b044d93b74ab3ebf389e0b3decb7598d4c4a5281e37ced0ce78fa1d07d2fa154342d456a026e0235eecf3dfd1ad9fdca57d0ec2da5c425b81069c33a77642e9b049187a8c12e959e675d756b8c96f7085fc82def8fe2e5e1b30b36f4879ada65a3c25add112d92799092d674ce737f2049254af205a630d75f72c1f3ba5641db377999a1fd567838e837c1fa374c19ff5bd8c81a6873b353b500d77e1de7d6b027191b4290b6e70b9461f9fc4e51ace97a5e4857679069129f6717f7b76f67ba3ecbf020699aa5b7fd24606cbd6ca034fa17d8067304e5c97f6f7caa53ea3895b87ea12820b1d7fe540443aa7d1241f544f3383b164361bd63a944af5956e7069d6b28d9e85b267c8d5383c9030cdc5c8fc07d38442ecead14dfcb6f35884482df118bc369996db596429809f4278f9d45a3ba6ec70efb9ae637a94c1d9abec97484ccd931b4d20c8e4cfbe9e49fbee3fb3eb8ef00b11d969a6d9363082f55e1c0c3417dc349bfbcf92f29d8f23a9b78510cbdec41c02a592532fdc3d132dd67292870302048fba89b867a362f211f99566bdf8bcd08a6ae62ddd1795afa849ec21f3e2462fce4a7d411150ab5be697dda6fd7c624137bf1af07f2ec6c5e0fa890de53e874ae8862540c5bb7aaa2dfa86afcfe05ccae9598a77214730a2a9b602ac2ad31db51ea0445d9715c24d7491a82660386cdd813f2ec3693185f8b2c33cbcc628c285e8af9234cf0a9b8d600369ab71703ad1db9e1b411e6559188f96d870614a9b090ff80e6be72d5b00d7bcfcecd5a2c21139ee56481115053073462d5222f422a0e65f8bfab611794373d9dc23d8d94391f556d320e4db2f6e1643273c25f128a3643f4697f156dbcc0e3086f8855b71bd2a2107c3e421d3fdfb6cd01fc57b85b7e4a863640b20e8bebe7039c4a9bc43644502549658b7bc88b705b313accb84a4ea5c5e8db222e3d915e321e6900c1452428225ac3cb78ff223329a4c0887523c239e401a87ab9d90901b3d22f0296de15fc88669c8de1d098c8c017d0fcf57e197c4b1bb61c3990304544d7478a4cdbe6b6f6f541415eec30616e907ce14d0fc281bc05bd7b136be5bea8d26af1a3f1e71f7cbf61d3e3b75bffdfb52f69a46e9782ba42278f6d7bb1b65673f2837e0c0c50e9c8892bed135218ee418e6ab72aaa75e89cecd813c1fbf608e7319cfbe5c9757b1f8ecbc9f5d420cc454d9b2a163f9eb5686c238b440bb62f736b183a9ca58e6ed979ee092cbb841454ab4791d9c5e2cea2ce4ca3995709f722e5a95bbbf1f70ac46396b1e9697f7c0c557f7bebc5039064bdab7ea838868ec67e0ed612b53e7f6f227a260c298052391fb31359602037ed26ea4a1215decb3cf8883169fce9cf452a086c9f8d84f1ca88435bc2b3d63bd84fe066270ce127feda301468c28241ac3519e2f51e64679e0eb273152a53b9209026ea25c32765bb7dc216a315981b210d9feb016a5b2a81c2c26f967fb91efdd01dd02539dec7e69a8de20027368f4de03fd794f5abe407ae1409f973ca9647bac4364ece52deeb97bfe07dc358416007ebb08cb5821d7743e6ac06141737031a258a7d5056ad4bfcc0eb21898b62b9ddea10d29a411a4cc4568f9fa7225a0c1d42bf4e361a3c85bc36d2e42edbe3c8c7c76de1c73159d512e099c8ab0b9a46e15dc8d078452c9e3db2f18324ba6baae15b2ae2fbdaee964e0a88ca11bcaf36cfb8569cd2e374b8dd322d6196a3fedea228602060e796111d6198875ee009472a61b6c134a6088beac5a3d706622362cf73ed1704052ad06b60593ffe2df31671b1d23aec5efd27407d7f817fdfdab2fa08deb2d8b22d608ee1c160aa82fa8c311f62964585096952deb93779c0a6a5912f507d852208802b759a67b72ca4d67d413b2890ead6085815478cf1864c5b9b6ecc472945fdf3c8eabe0d2dfb4ce89dfafe99fd0572a73887d062276ffdbfdfbb20e3956d8abba34818e98d6d3c34c61b7a963df792d77955c68a1354b024f2919c2d829f034cb0e42036ec8fb77eb83d2a0ba5ce5671ca3f52df23bbcd3c3b39364cf8a92af2059d4873860f9ede438b4ff95523998baf21fdddf4d1cbf0362f245e5dc9293f601341f6d34b1ffaefcffc35d7123c7bb6f193713be2e130b24da7d2528fad6234a84a77dc5df8710507a6f97b16dbf62830a9bbb0a7cd1725d9975dddb0edfba658d1224930e6acb1617bd5600efba6c891b6d0f53713fd51155e75f937c3fa676149a1341c49eefe7afbbfd0edf156bdbaeb97dbdb6214b3ebead37f8f24961ec135398c1090b1bc7434f10400a480776b29ce026ac77077fd09d08fb13631f25f2f63976d37ede851299e6037ab9eccbf4c64eeaa7f1bd689f71f709b3a951198b607466fb5c1997ee75d506be1101ae79d42423d5ce14256e9cb2d4cc862a633d22498a5a8b024b4a3f2eb28ae93f6e8b5a10c43d6c4b2719b118cc50a1a27d633a1ddf9edd13b0bb78dc61fd5aa48a213884748d4a177753633765093cd998ca1d7aff8eba9eb4b7b2a44df22d609c65a090437648e2eb248b8b49d282a332c51e3be15723911e4025810443b200f26daa94b0097ba598572b08249ada4e16055ed4107ba9d6c92e1b9439ba0a0435a564bbd2177fe31e1602d75e5331f8d0e0795cc02996e17c51bb6258c528f434b08f2c6f2f9984af966ba87129943d3a5018dcbcea64928ecb07ea6d6b2a31f867379f1d1985de9cfc297cffb906476aa9756de21db24b63ee6e4912c1ab23175a655d2926472f501bb30f139268c50f56c0656e8456721dc9feab413c8c34517e961619697f88f2ced558e562c06f4039ff7f2bef9aea70f9249fe8f53b3ea22500e91ebd72e37e821387b7f1ef421e925b36db04a8125400440b9433b51d6c446a168ce2553ce9fbb05d7716273a7d3cb25ef68ef73e022b724eb24f8a6f0435abc80e638a5414b68ebffb4234501d6c8e2745b4931fe6a5ada16547d9074cccf771f6fa442902c11ffd85ea3aabcf190f44a6da48f7728340c82c29384179d49239f713e9a51266bf6bc201d2f46b1abf2c8202eb6284e6644f3d9f53353015b60f77a0030c79d5d412511049aa2f8a78e08f481b0cf9e7a71cfeda8ed5471a3a717bc1ec654630fea992bf7346ec06b603202be9d8cdfe3e9774f20a26a31a8db3ca34a6af9fb9edf48761787582c02eb517715471ec7c8481d2fe49c86a68e47836ab97d74f2148838c9b62decba177d9a394b8ae988b44d076a24129462e0de37d7c067004590457542f06a70396f839c35aec0525440881572b023d0b69f22df0d861b8724e81bf27e99616fd5e8eec7424bca8a0f14a0da226e9a440a6f957d89ddc08c6fd344b813640c0904d9d7c31fadcb6669a74324493b6cdb7a285b1996aae36ccd4d1831f4e77329b0d808ca3e592e11d0dffb45ffe78759541161be733d3043553be57c735ad7be3311a16360719b91b01bba007c5b642e2d083e561122d7b6cade246bb86c498d06ff2ff73654bd6134fb159d260f99e6f453da203453dbd5b3fe75b5ac8e3b31a0f8e7290b24b0a57e00a0f43462289f33d9421cf87364d2ea9ae9d31a853695b70f8e4acbb7e805f4a5c3010a3b50a69bb25604f7cd578ede14a39126335a882186b87487a53faddc5599758db5ffd97867b81c1e90f3632dedad2ceb64c0aaf46a8772788e3d4090d470cb32361a50e0121970d6020c3f070ba1533c36a73039efe1378920606d5e2352ff8c55d201b97f537e8027e0794933ec7a7edbec555b1a6ca5ade627390d5dc0b7c5de65e89dce2963db20487070ec</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">待全部完成后开放</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>火电</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工艺</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2025年8月17日晚随笔</title>
    <link href="/2025/08/17/2025%E5%B9%B48%E6%9C%8817%E6%97%A5%E6%99%9A%E9%9A%8F%E7%AC%94/"/>
    <url>/2025/08/17/2025%E5%B9%B48%E6%9C%8817%E6%97%A5%E6%99%9A%E9%9A%8F%E7%AC%94/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="18e25e91fd8ace6ea7a63b629093127b2236acd4751ab19cce7f252a9bbac252">529bc8f933033e58292bc8056b5ce8ee585adeba23137249d9c5f2a0766003f699f371c8b60849660850da94211ba9dc6aa904ada4a9f08655fbea582dc77e735e1e019fad6d15f49ae79e6fb7e3ed1afb00a151d21cca8918c7c753c945f6e6098447f21a727e6000c3d506782407f90ae3a63d059a4964ebc23cb9dc3d99a3f7d5acbf7f9a636e959d66ad75846da78045f4a59a238191f456263c260e35d67ba61994a2a64cbe16c1f77fff4541cc7177cc5dfb7affe92fa43efc4d00f8abae1ebfcd76c0cfa4bf3a07ad6707a858</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">My Girl</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>动态时间规整</title>
    <link href="/2025/08/17/%E5%8A%A8%E6%80%81%E6%97%B6%E9%97%B4%E8%A7%84%E6%95%B4/"/>
    <url>/2025/08/17/%E5%8A%A8%E6%80%81%E6%97%B6%E9%97%B4%E8%A7%84%E6%95%B4/</url>
    
    <content type="html"><![CDATA[<h2 id="动态时间规整dtw">动态时间规整（DTW）</h2><h3 id="dtw-算法简介">DTW 算法简介</h3><p><strong>动态时间规整（Dynamic TimeWarping，DTW）</strong>是用于评估两个时间序列相似性的算法，它的核心是在计算两个时间序列相似性之前会先进行对齐。</p><p>假设有两个时序序列 <span class="math inline">\(\mathbf{x}=[x_0,x_1,..., x_{n-1}]\)</span>，<span class="math inline">\(\mathbf{y}=[y_0,y_1, ..., y_{m-1}]\)</span>，先假设这两个时间序列是等长的，即 <spanclass="math inline">\(n=m\)</span>。如果要计算它们的相似度，对于欧式距离（欧几里得距离，Euclideandistance）来说，可以表示为</p><p><span class="math display">\[d(\mathbf{x}, \mathbf{y}) = \sqrt{(x_0-y_0)^2 + (x_1-y_2)^2 + \ ... \  +(x_{n-1}-y_{m-1})^n}, \ \ n=m\tag{1}\]</span></p><p>而 DTW 是返回所有的时间对齐路径中最小的欧式距离，可以表示为</p><p><span class="math display">\[DTW(\mathbf{x}, \mathbf{y}) = \min\limits_{\pi \in\mathcal{A}(\mathbf{x}, \mathbf{y})} \sqrt{\sum_{(i,j) \in \pi}{d(x_i,y_j)^2}}\tag{2}\]</span></p><p>其中，<span class="math inline">\(\pi\)</span>表示对齐路径，是一个长度为 <span class="math inline">\(k\)</span>的索引对 <span class="math inline">\(\left( \ (i_0, j_0), \ ... \ ,(i_{k-1}, j_{k-1}) \ \right)\)</span>；<spanclass="math inline">\(\mathcal{A}(\mathbf{x}, \mathbf{y})\)</span>是是所有可接受对齐路径的集合；<span class="math inline">\(d(x_i,y_j)\)</span> 可以表示为 <span class="math inline">\(d(x_i, y_j) =\sqrt{(x_i-y_j)^2} =|x_i-y_j|\)</span>。一条路径若要被视为可接受路径，必须满足以下条件：</p><p>（1）时间序列的开始和结束要匹配在一起，即：</p><p>​ （a）<span class="math inline">\(\pi_0 = (0,0)\)</span></p><p>​ （b）<span class="math inline">\(\pi_{k-1} = (n-1, m-1)\)</span></p><p>（2）在路径中时序序列索引 <span class="math inline">\(i\)</span> 和<span class="math inline">\(j\)</span>应该满足单调递增，且至少出现一次，即：</p><p>​ （a）<span class="math inline">\(i_{q-1} \le i_{q} \le i_{q-1} +1\)</span></p><p>​ （b）<span class="math inline">\(j_{q-1} \le j_{q} \le j_{q-1} +1\)</span></p><p><img src="欧式距离与动态时间规整的区别.png" alt="图1 欧式距离与动态时间规整的区别" width="80%"></p><p>图 1可以明显看出欧氏距离（左）和动态时间规整（DTW，右）来计算两个时间序列之间的相似度的区别。图中灰线表示一个匹配关系或者说是对齐路径中的一个索引对<span class="math inline">\((i,j)\)</span>，所有的灰线就是一个对齐路径<span class="math inline">\(\pi\)</span>（在 DTW 中这个 <spanclass="math inline">\(\pi\)</span>也是最优，即满足最小欧式距离）。当然了左图中欧式距离的匹配关系是固定，始终保证垂直对应（同时刻对应），即满足<span class="math inline">\(i=j\)</span>。</p><h3 id="dtw-的矩阵形式">DTW 的矩阵形式</h3><p>DTW 路径可以用二进制矩阵表示，其中非零元素 1表示对应的时间序列元素是匹配的，和上面对齐路径中 <spanclass="math inline">\(\pi\)</span> 的一个索引对 <spanclass="math inline">\((i,j)\)</span> 是等价的。</p><p><span class="math display">\[(A_{\pi})_{i,j} =\begin{cases}1, &amp; if \ (i, j) \in \pi  \\0, &amp; otherwise\end{cases}\tag{3}\]</span></p><p><img src="动态时间扭曲路径表示为二进制矩阵形式.png" alt="图2 动态时间扭曲路径表示为二进制矩阵形式" width="80%"></p><p>图 2 左图中的灰色线表示一条对齐路径 <spanclass="math inline">\(\pi\)</span>，灰色点表示一个索引对 <spanclass="math inline">\((i,j)\)</span> ，在矩阵 <spanclass="math inline">\(A_{\pi}\)</span> 中灰色点为 1，其余为 0。</p><p>因此，动态时间规整可以写成矩阵之间点积的最小化：</p><p><span class="math display">\[DTW(\mathbf{x}, \mathbf{y}) = \min\limits_{\pi \in\mathcal{A}(\mathbf{x}, \mathbf{y})} \sqrt {&lt;A_{\pi}, D(x,y)&gt;}\tag{4}\]</span></p><p>其中，<span class="math inline">\(D(x,y)\)</span> 存储的为 <spanclass="math inline">\(d(x_i, y_j)^2\)</span>，其与式（2）是等价的。</p><h3 id="算法实现动态规划">算法实现（动态规划）</h3><p>虽然按照顺序找出所有的路径 <spanclass="math inline">\(\mathcal{A}(\mathbf{x}, \mathbf{y})\)</span>后计算最小值是困难的（共有 <spanclass="math inline">\(O(\frac{(3+2\sqrt{2})^2}{\sqrt{n}})\)</span>条路径，文章[1]给出，暂未证明），但幸运的是可以使用动态规划找到该优化问题的精确解。动态规划依赖于递归，即将给定问题的解与（更简单的）子问题的解联系起来。一旦知道了这种联系，动态规划方法就会通过递归求解所需的子问题并存储其解以供后续使用（从而避免多次重复计算子问题）来解决原始问题。其算法复杂度为<span class="math inline">\(O(nm)\)</span>。</p><p>假设有两个时序序列 <span class="math inline">\(\mathbf{x}=[x_1,x_2,..., x_{n}]\)</span>，<span class="math inline">\(\mathbf{y}=[y_1, y_2,..., y_{m}]\)</span>，计算 <span class="math inline">\(DTW(\mathbf{x},\mathbf{y})\)</span> 的伪代码可以表示为：</p><p><img src="DTW算法伪代码.png" width="70%"></p><p>此外，我们还可以找到最优路径 <spanclass="math inline">\(path\)</span>。</p><p><img src="DTW算法最优规整路径伪代码.png" width="70%"></p><h2 id="时间加权动态时间规整twdtw">时间加权动态时间规整（TWDTW）</h2><p><strong>时间加权动态时间规整（Time-Weighted Dynamic Time Warping，TWDTW）</strong>相较于动态时间规整的主要不同在于：动态时间规整计算两个匹配元素<span class="math inline">\((x_i, y_j)\)</span> 的距离为欧式距离，即</p><p><span class="math display">\[d(x_i, y_j) = \sqrt{(x_i-y_j)^2} = |x_i-y_j|\tag{5}\]</span></p><p>而时间加权动态时间规整计算两个匹配元素 <spanclass="math inline">\((x_i, y_j)\)</span> 的距离（惩罚）公式为：</p><p><span class="math display">\[c(x_i, y_j) = \sqrt{(1-\alpha)(i-j)^2+\alpha(x_i-y_j)^2}\tag{6}\]</span></p><h2 id="dtw-的应用">DTW 的应用</h2><p>文章 [2] 提到 DTW被设计用来评估两个时间序列相似性，其开始主要用于语音识别，后被用于许多领域：手写和在线签名匹配、手语识别和手势识别，数据挖掘与时间序列聚类（时间序列数据库检索）、计算机视觉与计算机动画、监视、蛋白质序列比对与化学工程、音乐和信号处理。但这里我们主要是介绍DTW 的变形—时间加权动态时间规整在寻找两个时间序列的时滞关系的应用。</p><h3 id="寻找两个时间序列的时滞关系">寻找两个时间序列的时滞关系</h3><p>假设有两个温度测点，分别位于蒸汽加热器管道入口处和出口处，我们采集它们的一段历史趋势可以构成两个时间序列<span class="math inline">\(T_1\)</span> 和 <spanclass="math inline">\(T_2\)</span>。为了方便阐述和简化计算，我们将采样间隔定位2 分钟，采集了这两个测点 1 个小时的数据，如图 3 所示：</p><p><img src="蒸汽加热器管道入口出口测点温度趋势图.png" alt="图3 蒸汽加热器管道入口出口测点温度趋势图" width="90%"></p><p>利用 TWDTW算法 我们可以获取它们的匹配关系。</p><p><img src="最优扭曲路径.png" alt="图4 最优扭曲路径" width="80%"></p><p><img src="蒸汽加热器管道入口出口测点时滞关系.png" alt="图5 蒸汽加热器管道入口出口测点时滞关系" width="90%"></p><h2 id="参考">参考</h2><p>[1] Romain Tavenard. An introduction to Dynamic Time Warping[EB/OL].2021. <ahref="https://rtavenar.github.io/blog/dtw.html">https://rtavenar.github.io/blog/dtw.html</a>.</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex">@misc&#123;tavenard.blog.dtw,<br>  author=&quot;Romain Tavenard&quot;,<br>  title=&quot;An introduction to Dynamic Time Warping&quot;,<br>  year=2021,<br>  howpublished=&quot;<span class="hljs-keyword">\url</span>&#123;<span class="hljs-link">https://rtavenar.github.io/blog/dtw.html</span>&#125;&quot;<br>&#125;<br></code></pre></td></tr></table></figure><p>[2] Senin, Pavel. Dynamic Time Warping Algorithm Review[R]. Honolulu,HI, USA, 2008.</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs latex">@techreport&#123;senin2008dtwReview,<br>  author      = &#123;Senin, Pavel&#125;,<br>  title       = &#123;Dynamic Time Warping Algorithm Review&#125;,<br>  institution = &#123;Department of Information and Computer Sciences, University of Hawaii at Manoa&#125;,<br>  number      = &#123;CSDL-08-04&#125;,<br>  address     = &#123;Honolulu, HI, USA&#125;,<br>  month       = dec,<br>  year        = &#123;2008&#125;,<br>  note        = &#123;[R]&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="附件">附件</h2><ol type="1"><li>文章中伪代码的 latex 代码</li></ol><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\documentclass</span>[a4paper,11pt]&#123;article&#125;<br><span class="hljs-keyword">\usepackage</span>&#123;algorithm&#125; <br><span class="hljs-keyword">\usepackage</span>&#123;algpseudocode&#125; <br><span class="hljs-keyword">\begin</span>&#123;document&#125;<br><span class="hljs-comment">% Algorithm 1: Dynamic Time Warping</span><br><span class="hljs-keyword">\begin</span>&#123;algorithm&#125;<br><span class="hljs-keyword">\caption</span>&#123;Dynamic Time Warping (DTW)&#125;<br><span class="hljs-keyword">\begin</span>&#123;algorithmic&#125;[1]<br>            <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>n <span class="hljs-keyword">\leftarrow</span> |<span class="hljs-keyword">\mathbf</span>&#123;x&#125;|<span class="hljs-built_in">$</span><br>            <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>m <span class="hljs-keyword">\leftarrow</span> |<span class="hljs-keyword">\mathbf</span>&#123;y&#125;|<span class="hljs-built_in">$</span><br>            <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>dtw[] <span class="hljs-keyword">\leftarrow</span> new <span class="hljs-keyword">\ </span>[n <span class="hljs-keyword">\times</span> m]<span class="hljs-built_in">$</span><br>            <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>dtw(0,0) <span class="hljs-keyword">\leftarrow</span> 0<span class="hljs-built_in">$</span><br>            <span class="hljs-keyword">\For</span> &#123;<span class="hljs-built_in">$</span>i=1,2,<span class="hljs-keyword">\ldots</span>,n<span class="hljs-built_in">$</span>&#125;<br>                <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>dtw(i, 1) <span class="hljs-keyword">\leftarrow</span> dtw(i-1, 1) + d(x<span class="hljs-built_in">_</span>i, y<span class="hljs-built_in">_</span>1)<span class="hljs-built_in">$</span><br>            <span class="hljs-keyword">\EndFor</span><br>            <span class="hljs-keyword">\For</span> &#123;<span class="hljs-built_in">$</span>j=1,2,<span class="hljs-keyword">\ldots</span>,m<span class="hljs-built_in">$</span>&#125;<br>                <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>dtw(1, j) <span class="hljs-keyword">\leftarrow</span> dtw(1, j-1) + d(x<span class="hljs-built_in">_</span>1, y<span class="hljs-built_in">_</span>i)<span class="hljs-built_in">$</span><br>            <span class="hljs-keyword">\EndFor</span><br>            <span class="hljs-keyword">\For</span> &#123;<span class="hljs-built_in">$</span>i=1,2,<span class="hljs-keyword">\ldots</span>,n<span class="hljs-built_in">$</span>&#125;<br>                <span class="hljs-keyword">\For</span> &#123;<span class="hljs-built_in">$</span>j=1,2,<span class="hljs-keyword">\ldots</span>,m<span class="hljs-built_in">$</span>&#125;<br>                    <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>dtw(i, j) <span class="hljs-keyword">\leftarrow</span> d(x<span class="hljs-built_in">_</span>i, y<span class="hljs-built_in">_</span>j) + min&#123;(dtw(i-1, j), dtw(i, j-1), dtw(i-1, j-1))&#125;<span class="hljs-built_in">$</span><br>                <span class="hljs-keyword">\EndFor</span><br>            <span class="hljs-keyword">\EndFor</span><br>            <span class="hljs-keyword">\State</span> return <span class="hljs-built_in">$</span>dtw<span class="hljs-built_in">$</span><br><span class="hljs-keyword">\end</span>&#123;algorithmic&#125; <br><span class="hljs-keyword">\end</span>&#123;algorithm&#125;<br><br><span class="hljs-comment">% Algorithm 2 Optimal Warping Path</span><br><span class="hljs-keyword">\begin</span>&#123;algorithm&#125;<br><span class="hljs-keyword">\caption</span>&#123;Optimal Warping Path (DTW)&#125;<br><span class="hljs-keyword">\begin</span>&#123;algorithmic&#125;[1]<br>            <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>path[] <span class="hljs-keyword">\leftarrow</span> new <span class="hljs-keyword">\ </span>array<span class="hljs-built_in">$</span><br>            <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>i <span class="hljs-keyword">\leftarrow</span> rows(dtw)<span class="hljs-built_in">$</span><br>            <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>j <span class="hljs-keyword">\leftarrow</span> columns(dtw)<span class="hljs-built_in">$</span><br>            <span class="hljs-keyword">\While</span>&#123;<span class="hljs-built_in">$</span>(i&gt;1) <span class="hljs-keyword">\&amp;</span> (j&gt;1)<span class="hljs-built_in">$</span>&#125;<br>                <span class="hljs-keyword">\If</span> &#123;<span class="hljs-built_in">$</span>i==1<span class="hljs-built_in">$</span>&#125;<br>                    <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>j=j-1<span class="hljs-built_in">$</span><br>                <span class="hljs-keyword">\ElsIf</span> &#123;<span class="hljs-built_in">$</span>j==1<span class="hljs-built_in">$</span>&#125;<br>                    <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>i=i-1<span class="hljs-built_in">$</span><br>                <span class="hljs-keyword">\Else</span><br>                    <span class="hljs-keyword">\If</span> &#123;<span class="hljs-built_in">$</span>dtw(i-1, j) == min&#123;(dtw(i-1, j), dtw(i, j-1), dtw(i-1, j-1))&#125;<span class="hljs-built_in">$</span>&#125;<br>                        <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>i=i-1<span class="hljs-built_in">$</span><br>                    <span class="hljs-keyword">\ElsIf</span> &#123;<span class="hljs-built_in">$</span>dtw(i, j-1) == min&#123;(dtw(i-1, j), dtw(i, j-1), dtw(i-1, j-1))&#125;<span class="hljs-built_in">$</span>&#125;<br>                        <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>j=j-1<span class="hljs-built_in">$</span><br>                    <span class="hljs-keyword">\Else</span><br>                        <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>i=i-1<span class="hljs-built_in">$</span><br>                        <span class="hljs-keyword">\State</span> <span class="hljs-built_in">$</span>j=j-1<span class="hljs-built_in">$</span><br>                    <span class="hljs-keyword">\EndIf</span><br>                    <span class="hljs-keyword">\State</span> path.add((i,j))<br>                <span class="hljs-keyword">\EndIf</span><br>            <span class="hljs-keyword">\EndWhile</span><br>            <span class="hljs-keyword">\State</span> return <span class="hljs-built_in">$</span>path<span class="hljs-built_in">$</span><br><span class="hljs-keyword">\end</span>&#123;algorithmic&#125; <br><span class="hljs-keyword">\end</span>&#123;algorithm&#125;<br><span class="hljs-keyword">\end</span>&#123;document&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>时间序列</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PID 控制器</title>
    <link href="/2025/08/17/PID%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    <url>/2025/08/17/PID%E6%8E%A7%E5%88%B6%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="反馈回路">反馈回路</h2><p><img src="反馈控制系统.png" alt="图1 反馈控制系统" width="80%"></p><p>这是一个典型的反馈控制系统，其中：</p><table><thead><tr class="header"><th></th><th>含义</th><th>英文</th><th>举例（以一级喷水减温控制系统为例）</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(SP\)</span></td><td>设定值</td><td>Set Point</td><td>一级过热汽温设定值（一般由运行手操）</td></tr><tr class="even"><td><span class="math inline">\(PV\)</span></td><td>过程变量</td><td>Process Value</td><td>一级过热汽温测量值（测点一般选二级减温器前温度）</td></tr><tr class="odd"><td><span class="math inline">\(OP\)</span></td><td>控制器输出</td><td>Output</td><td>一级减温水阀门开度</td></tr><tr class="even"><td><span class="math inline">\(e(t)\)</span></td><td>偏差</td><td></td><td><span class="math inline">\(PV-SP\)</span></td></tr><tr class="odd"><td><span class="math inline">\(u(t)\)</span></td><td>被控对象输入</td><td></td><td>一级减温水流量</td></tr><tr class="even"><td><span class="math inline">\(y(t)\)</span></td><td>被控对象输出</td><td></td><td>一级过热汽温</td></tr><tr class="odd"><td><span class="math inline">\(d(t)\)</span></td><td>扰动</td><td></td><td>煤质、入炉煤含水率、炉膛吸热分布</td></tr></tbody></table><p>为了叙述方便，后文中 <span class="math inline">\(OP\)</span> 和 <spanclass="math inline">\(u(t)\)</span> 、<spanclass="math inline">\(PV\)</span> 和 <spanclass="math inline">\(y(t)\)</span> 是等价的。</p><h2 id="pid分类">PID分类</h2><p>PID有很多分类方式：可以根据时间域特性/实现方式分为<strong>连续型</strong>和<strong>离散型</strong>；可以根据控制器输出形式（控制量本身或者控制量的增量）来分为<strong>位置式</strong>和<strong>增量式</strong>；可以根据结构形式分为<strong>串联形式PID（交互式）</strong>、<strong>并联形式PID</strong>和<strong>标准形式PID（非交互式、ISA形式、理想形式）</strong>。</p><h3 id="连续型和离散型pid">连续型和离散型PID</h3><p>（1）连续型 <span class="math display">\[u(t) = K_P e(t) + K_I \int_0^te(t)dt + K_D \frac{de(t)}{dt}\tag{1}\]</span> （2）离散型 <span class="math display">\[u_k = K_Pe_k + K_I \sum_{j=0}^{k}e_j \cdot T + K_D \cdot\frac{e_k-e_{k-1}}{T}\tag{2}\]</span> 其中 <span class="math inline">\(T\)</span> 为采样时间。</p><h3 id="位置式和增量式pid">位置式和增量式PID</h3><p>（1）位置式 <span class="math display">\[u_k = K_Pe_k + K_I \sum_{j=0}^{k}e_j \cdot T + K_D \cdot\frac{e_k-e_{k-1}}{T}\tag{3}\]</span> 其中 <span class="math inline">\(T\)</span> 为采样时间。</p><p>（2）增量式 <span class="math display">\[\Delta{u_k} = K_P(e_k - e_{k-1}) + K_I e_k \cdot T + K_D \cdot\frac{e_k-2e_{k-1}+e_{k-2}}{T}\\u_k = u_{k-1} + \Delta{u_k}\tag{4}\]</span></p><p>（3）证明位置式与增量式等价</p><blockquote><p>【证明 1】： <span class="math display">\[\begin{aligned}\Delta{u_k} &amp;= u_k - u_{k-1} \\&amp;= K_Pe_k + K_I \sum_{j=0}^{k}e_j \cdot T + K_D \cdot\frac{e_k-e_{k-1}}{T} - (K_Pe_{k-1} + K_I \sum_{j=0}^{k-1}e_j \cdot T  +K_D \cdot \frac{e_{k-1}-e_{k-2}}{T}) \\&amp;= K_P(e_k - e_{k-1}) + K_I e_k \cdot T + K_D \cdot\frac{e_k-2e_{k-1}+e_{k-2}}{T}\end{aligned}\tag{5}\]</span></p></blockquote><blockquote><p>【证明 2】： <span class="math display">\[\begin{aligned}u_k &amp;= u_{k-1} + \Delta{u_k} \\&amp;= u_0 + \Delta{u_1} + \Delta{u_2} + ... + \Delta{u_k} \\&amp;= u_0 + K_p(e_k - e_0) + K_I \sum_{j=1}^{k}e_j \cdot T + K_D\frac{e_k-e_{k-1}-e_0+e_{-1}}{T}\end{aligned}\tag{6}\]</span></p></blockquote><h3 id="串行并行和标准型pid">串行、并行和标准型PID</h3><p>（1）串联形式PID</p><p><img src="串行PID结构图.png" alt="图2 串行PID结构图" width="80%"><span class="math display">\[u(t) = K_P \left[ \left( 1 + \frac{T_D}{T_I} \right) e(t) +\frac{1}{T_I} \int_0^t e(t) dt + T_D \frac{de(t)}{dt} \right]\tag{7}\]</span></p><p>（2）并联形式PID</p><p><img src="并行PID结构图.png" alt="图3 并行PID结构图" width="80%"><span class="math display">\[u(t) = K_P e(t) + K_I \int_0^te(t)dt + K_D \frac{de(t)}{dt}\tag{8}\]</span> 并行结构允许比例、积分和微分作用完全解耦，即 PID的三个参数都相互独立。</p><p>（3）标准形式PID</p><p><img src="理想型PID结构图.png" alt="图4 理想型PID结构图" width="80%"><span class="math display">\[\begin{align}u(t) &amp;= K_P \left[ e(t) + \frac{1}{T_I} \int_0^te(t)dt + T_D\frac{de(t)}{dt}\right] \\&amp;= K_P e(t) + \frac{K_P}{T_I} \int_0^te(t)dt + K_P T_D\frac{de(t)}{dt}\end{align}\tag{9}\]</span> 标准型结构中，修改 <span class="math inline">\(K_P\)</span>系数将影响比例、积分和微分作用。相较于并行结构，标准型的各参数有其明确的物理意义：</p><table><thead><tr class="header"><th></th><th><span class="math inline">\(K_P\)</span></th><th><span class="math inline">\(T_I\)</span></th><th><span class="math inline">\(T_D\)</span></th></tr></thead><tbody><tr class="odd"><td>名称</td><td>比例增益（Proportional Gain）</td><td>积分时间常数（Integral Time）</td><td>微分时间常数（Derivative Time）</td></tr><tr class="even"><td>物理意义</td><td>（1）决定当前误差 e(t) 对控制输出的影响强度;<br />（2）增大 <spanclass="math inline">\(K_P\)</span>，系统响应更快，纠正动作更激烈，但容易振荡；<br />（3）减小<spanclass="math inline">\(K_P\)</span>，系统响应变慢，稳态误差可能增大。</td><td>（1）积分项的时间基准，决定过去误差累积对控制输出的影响；<br />（2）积分项希望在误差持续存在的情况下不断“积累”，逐步将误差逼近0；<br />（3）积分作用越强（即<spanclass="math inline">\(T_I\)</span>越小），系统越快尝试消除稳态误差。</td><td>（1）预测未来误差趋势；<br />（2）用误差的变化率来提前做出反应；<br />（3）增大<spanclass="math inline">\(T_D\)</span>，系统会更敏感地对误差的变化速度做出反应（如防止超调），但太大容易放大噪声，系统变得不稳定。</td></tr><tr class="odd"><td>通俗理解</td><td><span class="math inline">\(K_P\)</span>决定了当前误差的重要性。</td><td>在理想条件下，如果误差维持不变，系统将在 <spanclass="math inline">\(T_I\)</span> 秒后将该误差完全消除。</td><td>预测如果当前误差增长趋势持续 <spanclass="math inline">\(T_D\)</span> 秒，将会出现多大误差，提前修正。</td></tr></tbody></table><blockquote><p><strong>解释一下为什么”在理想条件下，如果误差维持不变，系统将在 <spanclass="math inline">\(T_I\)</span> 秒后将该误差完全消除“？</strong></p><p>假设控制误差 <span class="math inline">\(e(t) = e_0\)</span>是一个不变的常数（比如由于一个阶跃扰动导致系统输出偏离设定值），初始控制器输出为0，被控对象是时不变系统（即在不同时间，对系统施加相同的 <spanclass="math inline">\(u(t)\)</span> ，系统输出 <spanclass="math inline">\(y(t)\)</span>不变），不考虑微分项，所以控制器的输出可以表示为： <spanclass="math display">\[\begin{align}u(t) &amp;= K_P \left[ e_0 + \frac{1}{T_I} \int_0^t e_0 dt \right] \\&amp;= K_P \left[ e_0 + \frac{1}{T_I} e_0 t \right] \\&amp;= K_P e_0 \left[ 1 + \frac{t}{T_I} \right]\end{align}\tag{10}\]</span> 由于 <span class="math inline">\(e_0\)</span> 是常数，所以<span class="math inline">\(u(t)\)</span>中比例部分是不变的（这也是为什么纯比例调节无法消除静态误差，因为对于时不变系统来时，施加相同的<span class="math inline">\(u(t)\)</span> ，系统输出 <spanclass="math inline">\(y(t)\)</span> 是不变，如果 <spanclass="math inline">\(u(t)\)</span> 那 <spanclass="math inline">\(y(t)\)</span>也不会变化，所以误差一直存在，即静态误差，或叫稳态误差），只有积分部分才影响<span class="math inline">\(u(t)\)</span> ，或者可以求一下上式的微分：<span class="math display">\[\frac{du(t)}{dt} = \frac{K_P}{T_I} \cdot e_0\tag{11}\]</span> 更加明显地看出只有积分部分才影响 <spanclass="math inline">\(u(t)\)</span>的变化，且是线性增加的（每个周期都增加 <spanclass="math inline">\(\frac{K_P}{T_I} \cdot e_0\)</span>），<spanclass="math inline">\(u(t)\)</span> 的变化会推动 <spanclass="math inline">\(y(t)\)</span> 靠近设定值，最终消除偏差。</p><p>先假设 <span class="math inline">\(\Delta y(t) = \frac{1}{K_P} \cdot\Delta u(t)\)</span>， 即当 <span class="math inline">\(u(t)\)</span>变化 <span class="math inline">\(\Delta u(t)\)</span> 时，<spanclass="math inline">\(y(t)\)</span> 就变化 <spanclass="math inline">\(\frac{1}{K_P} \cdot \Deltau(t)\)</span>（这里涉及了如何确定一个纯比例控制器的 <spanclass="math inline">\(K_P\)</span>值，后面讲调节方法的时候会再提及），那么如果想要消除误差 <spanclass="math inline">\(e_0\)</span>，就应该让 <spanclass="math inline">\(u(t)\)</span> 变化 <span class="math inline">\(K_Pe_0\)</span>，即 <span class="math inline">\(u(t+T) = u(t) + K_Pe_0\)</span>，前面已经说明了比例作用是不会让 <spanclass="math inline">\(u(t)\)</span> 变化的，所以其中 <spanclass="math inline">\(T\)</span> 就表明了积分作用需要 <spanclass="math inline">\(T\)</span> 时刻让 <spanclass="math inline">\(u(t)\)</span> 变化 <spanclass="math inline">\(e_0\)</span>，故现在只需要证明 <spanclass="math inline">\(T_I = T\)</span> 即可，证明如下： <spanclass="math display">\[\begin{align}&amp; u(t + T) - u(t) = K_P e_0 \\&amp;\implies K_P e_0 \left[ 1 + \frac{t+T}{T_I} \right] - K_P e_0\left[ 1 + \frac{t}{T_I} \right] = K_P e_0 \\&amp;\implies K_P e_0 \frac{T}{T_I} = K_P e_0 \\&amp;\implies T = T_I\end{align}\tag{12}\]</span></p><p>说明了系统将在 <span class="math inline">\(T_I\)</span> 秒后将误差<span class="math inline">\(e_0\)</span> 彻底消除，积分项在 <spanclass="math inline">\(T_I\)</span> 秒内就能产生与比例项相等的作用。</p></blockquote><h2 id="pid整定">PID整定</h2><h3id="pid控制器不同参数的阶跃响应分析">PID控制器不同参数的阶跃响应分析</h3><p><img src="PI控制器效果示意图.png" alt="图5 PI控制器效果示意图" width="90%"></p><p>图 5 显示了比例系数<spanclass="math inline">\(K_P\)</span>和积分时间<spanclass="math inline">\(T_I\)</span>的差异如何影响 PI控制器的响应。正中间的图形为基本情况，随着参数的整定，无论是翻倍还是减半，过程的每一个动态响应都截然不同。左上角的图显示，当比例作用加倍（比例系数加倍）且积分作用加倍（积分时间减半）时，控制器会产生大而缓慢的阻尼振荡。相反，右下角的图显示，当控制器比例作用减半（比例系数减半）且积分作用减半（积分时间加倍）时，响应变慢。</p><blockquote><p>比例作用和积分作用增强时，系统振荡；比例作用和积分作用减弱时，系统响应变慢。</p></blockquote><p><img src="纯比例控制比例增益不同时的设定中阶跃响应曲线.png" alt="图6 纯比例控制比例增益不同时的设定中阶跃响应曲线" width="80%"></p><p>比例系数 <span class="math inline">\(K_P\)</span>加大，使系统的动作灵敏，速度加快，振荡次数增多，调节时间变长。当比例系数太大时，系统会趋于不稳定。加大比例系数，在系统稳定的情况下，可以减小余差，提高控制精度，却不能完全消除余差（有余差，系统始终未达到1）。</p><p><img src="纯比例控制和比例积分控制阶跃响应曲线.png" alt="图7 纯比例控制和比例积分控制阶跃响应曲线" width="80%"></p><p>PI 控制器主要用来改善控制系统的稳态性能。因为单纯增大 P的方法减小余差的同时会使系统的超调量增大，破坏了系统的平稳性，而积分环节的引入可以与P 控制合作来消除上述的副作用。此外，引入积分作用可以消除余差。</p><p><img src="PID控制阶跃响应曲线.png" alt="图8 PID控制阶跃响应曲线" width="80%"></p><p>增加微分有利于加快系统的响应速度，使系统的超调量减小，稳定性增加，同时增大比例可以进一步加快系统的响应速度，使系统更快速。</p><h3 id="自衡对象和积分对象">自衡对象和积分对象</h3><p>工业过程中常见的过程有自衡和非自衡两种，下图显示了两个过程对输出阶跃变化的理想化趋势。左边的过程是非积分对象，也叫自衡对象；右边的过程是非自衡对象，也叫积分对象。如下图左侧所示，自衡对象能够响应控制器输出并逐渐达到新的稳态操作点，典型的自衡对象如调节阀控制的流量；如右侧所示，积分过程没有平衡点，即控制器输出变化后过程在一个方向持续变化，除非进行新的干预否则积分过程将持续变化而无法达到新的稳态，典型的积分对象如液位。</p><p><img src="自衡对象和积分对象.png" alt="图9 自衡对象和积分对象" width="100%"></p><h3 id="pid控制器正反作用判定">PID控制器正反作用判定</h3><p><img src="PID控制器.png" alt="图10 PID控制器" width="20%"></p><table><thead><tr class="header"><th></th><th>正作用</th><th>反作用</th></tr></thead><tbody><tr class="odd"><td>偏差计算</td><td><span class="math inline">\(e = PV-SP\)</span></td><td><span class="math inline">\(e = SP-PV\)</span></td></tr><tr class="even"><td><span class="math inline">\(PV\)</span>与<spanclass="math inline">\(OP\)</span>的关系</td><td><span class="math inline">\(PV\)</span>与<spanclass="math inline">\(OP\)</span>同向（<span class="math inline">\(PV\nearrow\)</span>，<span class="math inline">\(OP \nearrow\)</span>）</td><td><span class="math inline">\(PV\)</span>与<spanclass="math inline">\(OP\)</span>反向（<span class="math inline">\(PV\nearrow\)</span>，<span class="math inline">\(OP \searrow\)</span>）</td></tr><tr class="odd"><td>控制系统</td><td>反过程</td><td>正过程</td></tr></tbody></table><p>判定PID控制器应该采用正作用还是反作用的方法：</p><p>（1）先判定被控对象是正过程还是反过程</p><p>根据控制量与被控量直接的物理因果关系来判断，当控制量增大，被控量也增大时，为正过程；当控制量增大，被控量减小时，为反过程。火电中常见的正过程有：汽机阀门控制（汽机阀门开度增大，蒸汽流量增大）；反过程有：减温水控制（喷水减温阀门开度增大，蒸汽温度减小）。</p><p>（2）根据被控对象选择正反作用</p><p>如果被控对象是反过程则控制器应选择正作用，如果是正过程则选择反作用。</p><h3 id="关于pid的调试技巧">关于PID的调试技巧</h3><blockquote><p>PID的整定方法有很多，这里只是整理一下自己的调试思路。</p></blockquote><p>（1）研究被控对象，确定其是正过程还是反过程，然后确定PID控制器应该采用反作用（正过程）还是正作用（反过程）</p><p>这里以一级过热蒸汽喷水减温控制系统为例：（实际上它的控制系统是一个串级PID，这里为了方便叙述我们简化了，调试的方法的都是类似，只不过串级PID需要先将内环PID先整定好，使得它内环的PV值可以很快的去跟随SP值（外环的输出OP）。）</p><p><img src="一级过热蒸汽喷水减温控制系统.png" alt="图11 一级过热蒸汽喷水减温控制系统" width="60%"></p><p>首先确定我们的目的是通过控制减温水阀门的开度来控制喷水减温的流量，最终将屏式过热器后的蒸汽温度控制在设定值的附近。阀门开度（控制量）增加，蒸汽温度（被控量）减小，所以该被控对象为反过程，PID控制器应该选择正作用。PID控制器的SP为屏式过热器后汽温设定值，PV为屏式过热器后汽温测量值，OP为减温水阀门开度。</p><p>（2）确定纯比例调节的<span class="math inline">\(K_P\)</span>数值</p><blockquote><p>这里提到的 <span class="math inline">\(OP\)</span> 和 <spanclass="math inline">\(u(t)\)</span> 、<spanclass="math inline">\(PV\)</span> 和 <spanclass="math inline">\(y(t)\)</span> 是等价的。</p></blockquote><p>纯比例控制： <span class="math display">\[u(t) = K_P \cdot e(t)\tag{13}\]</span>这里首先需要确定单位OP动作可以影响多少PV，假设PV和OP是存在线性关系的，即</p><p><span class="math display">\[y(t) = K \cdot u(t) + b\tag{14}\]</span></p><p>可以采集历史数据后，进行线性回归获得这个 <spanclass="math inline">\(K\)</span>值，它也被叫做过程模型的增益，或者表示为</p><p><span class="math display">\[K = \frac{\Delta PV}{\Delta OP}\tag{15}\]</span></p><p>此时便确定了单位OP动作可以影响多少PV，即OP每变化单位1，PV会改变单位<spanclass="math inline">\(K\)</span>。所以当PV与SP的偏差为单位1的时候，OP就需要动作<span class="math inline">\(\frac{1}{K}\)</span>，所以这个 <spanclass="math inline">\(\frac{1}{K}\)</span>的绝对值就是纯比例调节应该设置的 <spanclass="math inline">\(K_P\)</span> 值，即： <spanclass="math display">\[K_P = \vert \frac{1}{K} \vert\tag{16}\]</span></p><blockquote><p><strong>解释一下为什么 “<spanclass="math inline">\(\frac{1}{K}\)</span>的绝对值就是纯比例调节应该设置的 <spanclass="math inline">\(K_P\)</span> 值”？</strong></p><p>刚才已经确定了OP每变化单位1，PV会改变单位 <spanclass="math inline">\(K\)</span>，即 <span class="math display">\[\Delta y(t) = K \cdot \Delta u(t)\tag{17}\]</span> 假设 <span class="math inline">\(t\)</span>时刻因阶跃扰动产生了一个控制误差 <span class="math inline">\(e(t) =e_0\)</span>，对于纯比例控制，如果想消除这个偏差 <spanclass="math inline">\(e_0\)</span>，需要让 <spanclass="math inline">\(y(t)\)</span> 改变 <spanclass="math inline">\(e_0\)</span>，那么 <spanclass="math inline">\(\Delta u(t)\)</span> 应该满足 <spanclass="math inline">\(\Delta u(t) = \frac{1}{K} e_0\)</span>，怎么让<span class="math inline">\(\Delta u(t) = \frac{1}{K} e_0\)</span>呢？根据纯比例控制的PID公式可知： <span class="math display">\[\begin{align}&amp; u(t) = K_P \cdot e(t) \\&amp; \implies u(t) - u(t-1) = K_P \cdot \left[ e(t) - e(t-1) \right] \\&amp; \implies \Delta u(t) = K_P \cdot \left[ e_0 - 0 \right] \\&amp; \implies \Delta u(t) = K_P e_0 \\\end{align}\tag{18}\]</span></p><p>当 <span class="math inline">\(K_P = \frac{1}{K}\)</span> 时，<spanclass="math inline">\(\Delta u(t) = \frac{1}{K}e_0\)</span>，但如果系统时反过程，那么 <span class="math inline">\(K&lt; 0\)</span>， 所以 <span class="math inline">\(K_P\)</span> 设为<span class="math inline">\(\frac{1}{K}\)</span> 的绝对值，即<spanclass="math inline">\(K_P = \vert \frac{1}{K} \vert\)</span>。</p></blockquote><p><strong>注意在拟合模型增益 <span class="math inline">\(K\)</span>的时候，要消除系统滞后带来的影响，即拟合：</strong> <spanclass="math display">\[y(t+\tau) = K \cdot u(t) + b\tag{19}\]</span><img src="拟合过程模型的增益.png" alt="图12 拟合过程模型的增益" width="90%"></p><p>如图 12 所示，可以找到一些关联数据段<span class="math inline">\(( \u(t), \ y(t+\tau) \ )\)</span>，拟合出不同时间段（不同工况下）的模型增益<span class="math inline">\(K\)</span>，然后可以利用核密度估计等方法找到它们的中心点作为模型增益 <spanclass="math inline">\(K\)</span> ，进而计算出纯比例控制下的 <spanclass="math inline">\(K_P\)</span> 值。</p><p>（3）将计算得的纯比例调节下的 <spanclass="math inline">\(K_P\)</span> 值和一个较大的<spanclass="math inline">\(T_I\)</span>值（比如 <spanclass="math inline">\(T_I = 1000s\)</span>）设入PID控制器，然后逐渐减小<span class="math inline">\(K_P\)</span>（减小比例作用） 和 <spanclass="math inline">\(T_I\)</span> （增加积分作用）。</p><h2 id="参考">参考</h2><p>[1] 冯少辉. PID 参数整定与复杂控制[M]. 北京: 化学工业出版社,2023(11).</p><h2 id="附件">附件</h2><p>【代码】</p><ol type="1"><li><p><ahref="https://github.com/HuShanzhi/pid_controller_demo/blob/main/pid_simulator_dash.py">基于dash的PID控制仿真器</a></p></li><li><p><ahref="https://github.com/HuShanzhi/pid_controller_demo/blob/main/pid_anlysis.ipynb">PID控制器不同参数的阶跃响应分析</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>控制</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>虚拟模型控制</title>
    <link href="/2023/05/07/%E8%99%9A%E6%8B%9F%E6%A8%A1%E5%9E%8B%E6%8E%A7%E5%88%B6/"/>
    <url>/2023/05/07/%E8%99%9A%E6%8B%9F%E6%A8%A1%E5%9E%8B%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是vmc">什么是VMC</h2><p>VMC是一种直觉控制方式，其核心思想是利用假想的虚拟构件(如弹簧、阻尼器、轴承等等)连接机器人内部作用点，或者连接作用点与外部环境，产生相应的虚拟力来“驱使”机器人实现期望的运动。这些虚拟力通过Jacobian矩阵计算得到期望的关节力矩，作为关节控制的输入，驱动机器人运动以产生和虚拟构件一样的作用效果。<strong>VMC的应用关键在于两点：一是在每个需要控制的自由度上构造恰当的虚拟构件以产生合适的虚拟力；二是在不同的相位状态利用相应的Jacobian 矩阵计算期望的关节力矩。</strong></p><h3 id="雅可比矩阵">雅可比矩阵</h3><p>虚拟力不是实际存在的作用力或力矩，机器人的运动最终是通过关节力矩实现的。为了将工作空间(TaskSpace)的力或力矩映射成关节空间(JointSpace)的关节力矩，需要先求得这两个空间的位置映射关系，即正运动学模型：<span class="math display">\[\pmb{x} = f(\pmb{q}) \tag{1}\]</span> 其中，<span class="math inline">\(\pmb{x} = [x_1\ x_2 \ ...x_m]^T\)</span> 为机体坐标系相对于地面坐标系的<spanclass="math inline">\(m\)</span>个自由度对应的位姿向量，<spanclass="math inline">\(\pmb{q} = [q_1 \ q_2 \ ... q_n]^T\)</span> 为<spanclass="math inline">\(n\)</span>个关节变量的位置向量。对式 （1），分别求<span class="math inline">\(\pmb{x}\)</span> 对 <spanclass="math inline">\(\pmb{q}\)</span> 的偏导数得： <spanclass="math display">\[\begin{cases}\delta x_1 = \frac{\partial f1}{\partial q_1} \delta q1 + \ ... +\frac{\partial f1}{\partial q_n} \delta qn \\\vdots \\\delta x_m = \frac{\partial fm}{\partial q_1} \delta q1 + \ ... +\frac{\partial fm}{\partial q_n} \delta qn\\\end{cases}\tag{2}\]</span> 即 <span class="math display">\[\delta \pmb{x} =  \begin{bmatrix}\frac{\partial f1}{\partial q_1}&amp;...&amp;\frac{\partial f1}{\partialq_n} \\\vdots&amp;\ddots&amp;\vdots\\\frac{\partial fm}{\partial q_1}&amp;...&amp;\frac{\partial fm}{\partialq_n} \\\end{bmatrix}\delta \pmb{q}\tag{3}\]</span> 可简写为 <span class="math display">\[\delta \pmb{x}_{(m,1)} = \pmb{J}_{(m,n)} \cdot \delta \pmb{q}_{(n,1)}\tag{4}\]</span> <span class="math inline">\(\pmb{J}_{(m,n)}\)</span>即为雅可比矩阵，它可以将关节速度 <spanclass="math inline">\(\dot{q}\)</span> 映射成机体位姿速度 <spanclass="math inline">\(\dot{x}\)</span>。</p><h3 id="外部作用力和关节力矩的关系">外部作用力和关节力矩的关系</h3><blockquote><p>虚功原理：</p></blockquote><p>根据虚功原理，可得： <span class="math display">\[\pmb{\tau}^T \delta \pmb{q} + (-\pmb{F})^T\delta \pmb{x} = 0\tag{5}\]</span></p><p>其中，<span class="math inline">\(\pmb{\tau} = [\tau_1\ \tau_2 \ ...\tau_n]^T\)</span> 为关节力矩列向量，<spanclass="math inline">\(\pmb{F}=[F_1 \ F_2 \ ... F_m]^T\)</span>为外部作用力。根据式（4）、（5）可得外部作用力和关节力矩之间的关系为：</p><p><span class="math display">\[\pmb{\tau} = \pmb{J}^T \pmb{F}\tag{6}\]</span></p><p>其中，<span class="math inline">\(\pmb{J}\)</span> 为雅可比矩阵。</p><h2 id="示例">示例</h2><h3 id="三自由度机械手臂腿利用-vmc-进行追点">三自由度机械手臂（腿）利用VMC 进行追点</h3><h4 id="机器人环境">机器人环境</h4><p>采用<code>nyu_finger</code>机器人，该机器人来自于项目<ahref="https://github.com/open-dynamic-robot-initiative/nyu_finger">ODRI/ nyu_finger</a>。可以将<code>nyu_finger</code>简化为为一个三自由度机械臂模型，如下所示：</p><figure><img src="三自由度机械臂简化模型.png"alt="图1 三自由度机械臂简化模型" /><figcaption aria-hidden="true">图1 三自由度机械臂简化模型</figcaption></figure><h4 id="正运动学">正运动学</h4><p>首先要求解三自由度机械手臂的正运动学公式，方法如下：</p><ul><li>采用 MDH 法（又称克雷格法）建立坐标系（【注】原论文采用的是 DH法），如下所示：</li></ul><figure><img src="MDH法建立坐标系.png" alt="图2 MDH法建立坐标系" /><figcaption aria-hidden="true">图2 MDH法建立坐标系</figcaption></figure><ul><li><p>建立机器人的连杆参数表；</p><table><thead><tr class="header"><th><span class="math inline">\(i\)</span></th><th><span class="math inline">\(\alpha_{i-1}\)</span></th><th><span class="math inline">\(a_{i-1}\)</span></th><th><span class="math inline">\(d_i\)</span></th><th><span class="math inline">\(\theta_{i}\)</span></th></tr></thead><tbody><tr class="odd"><td>1</td><td>0</td><td>0</td><td>0</td><td><span class="math inline">\(\theta_1\)</span></td></tr><tr class="even"><td>2</td><td><span class="math inline">\(-\pi/2\)</span></td><td>0</td><td><span class="math inline">\(D_2\)</span></td><td><span class="math inline">\(\theta_2\)</span></td></tr><tr class="odd"><td>3</td><td>0</td><td><span class="math inline">\(L_2\)</span></td><td><span class="math inline">\(D_3\)</span></td><td><span class="math inline">\(\theta_3\)</span></td></tr><tr class="even"><td>4</td><td>0</td><td><span class="math inline">\(L_3\)</span></td><td>0</td><td>0</td></tr></tbody></table></li><li><p>求末坐标系和初坐标系之间得变换矩阵 <spanclass="math inline">\(^0_4T\)</span></p><blockquote><p>两个相邻坐标系之间的变换矩阵通式为： <span class="math display">\[^{i-1}_iT =\begin{bmatrix}cos\theta_i&amp;-sin\theta_i&amp;0&amp;a_{i-1}\\cos\alpha_{i-1} sin\theta_i&amp;cos\alpha_{i-1}cos\theta_i&amp;-sin\alpha_{i-1} &amp;-d_isin\alpha_{i-1} \\sin\alpha_{i-1} sin\theta_i&amp;sin\alpha_{i-1}cos\theta_i&amp;cos\alpha_{i-1} &amp;d_icos\alpha_{i-1} \\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\\tag{7}\]</span></p></blockquote><p>首先，根据式（7），求出所有的两个相邻坐标系之间的变换矩阵为： <spanclass="math display">\[^0_1T =\begin{bmatrix}cos\theta_1&amp;-sin\theta_1&amp;0&amp;0\\sin\theta_1&amp;cos\theta_1&amp;0 &amp;0 \\0 &amp;0 &amp;1 &amp;0 \\0 &amp;0 &amp;0 &amp;1\\\end{bmatrix} \\\tag{8}\]</span></p><p><span class="math display">\[^1_2T =\begin{bmatrix}cos\theta_2&amp;-sin\theta_2&amp;0&amp;0\\0 &amp;0 &amp;1 &amp;D_2\\-sin\theta_2 &amp;-cos\theta_2 &amp;0 &amp;0 \\0 &amp;0 &amp;0 &amp;1\\\end{bmatrix} \\  \tag{9}\]</span></p><p><span class="math display">\[^2_3T =\begin{bmatrix}cos\theta_3&amp;-sin\theta_3&amp;0&amp;L_2\\sin\theta_3&amp;cos\theta_3&amp;0 &amp;0 \\0 &amp;0 &amp;1 &amp;D_3 \\0 &amp;0 &amp;0 &amp;1\\\end{bmatrix} \\\tag{10}\]</span></p><p><span class="math display">\[^3_4T =\begin{bmatrix}1 &amp;0 &amp;0 &amp;L_3\\0 &amp;1 &amp;0 &amp;0 \\0 &amp;0 &amp;1 &amp;0 \\0 &amp;0 &amp;0 &amp;1\\\end{bmatrix} \\\tag{11}\]</span></p><p>然后，将上述变换矩阵累乘得： <span class="math display">\[^0_4T = ^0_1T ^1_2T^2_3T^3_4T \\=\begin{bmatrix}c_1c_{23} &amp;-c_1s_{23} &amp;-s_1&amp;c_1(L_2c_2+L_3c_{23})-s_1(D_2+D_3)\\s_1c_{23} &amp;-s_1s_{23} &amp;c_1&amp;s_1(L_2c_2+L_3c_{23})+c_1(D_2+D_3) \\-s_{23} &amp;-c_{23} &amp;0 &amp;-L_2s_2-L_3s_{23} \\0 &amp;0 &amp;0 &amp;1\\\end{bmatrix} \\\tag{12}\]</span></p><blockquote><p>【注】<span class="math inline">\(c_1\)</span> 为 <spanclass="math inline">\(cos\theta_1\)</span>的简写，<spanclass="math inline">\(c_{23}\)</span> 为 <spanclass="math inline">\(cos(\theta_2+\theta_3)\)</span>的简写，其余类似。</p></blockquote></li><li><p>求末端点在0号坐标系中的表示</p><p>根据式（12），在0号坐标系表示末端点（4号坐标系的原点）为 <spanclass="math display">\[^0P_{origin_4} =\begin{bmatrix}c_1(L_2c_2+L_3c_{23})-s_1(D_2+D_3)\\s_1(L_2c_2+L_3c_{23})+c_1(D_2+D_3) \\-L_2s_2-L_3s_{23} \\\end{bmatrix} \\\tag{13}\]</span></p><p>式（13）即为式（1）描述的正运动学模型 <spanclass="math inline">\(\pmb{x} = f(\pmb{q}) \tag{1}\)</span>，其中，<spanclass="math inline">\(\pmb{x} =\ ^0P_{origin_4}=  [^0x_{origin_4}\^0y_{origin_4}\ ^0z_{origin_4}]^T\)</span>，<spanclass="math inline">\(\pmb{q} = [\theta_1 \ \theta_2 \\theta_3]^T\)</span> 。</p></li></ul><p><em>当然，上述矩阵的求解没有人会希望通过手算来解决，可以利用matlab写一个简单脚本进行计算：</em></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 用于生成变换矩阵.</span><br><span class="hljs-comment">% @filename: generate_T.m</span><br><span class="hljs-comment">% @functionname: generate_T</span><br><span class="hljs-comment">% @args: </span><br><span class="hljs-comment">%   alpha, a, d, theta.</span><br><span class="hljs-comment">% @return:</span><br><span class="hljs-comment">%   T.</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">T</span> = <span class="hljs-title">generate_T</span><span class="hljs-params">(alpha, a, d, theta)</span></span><br><span class="hljs-comment">% 这里的T矩阵是式（7）的矩阵</span><br>T = [<span class="hljs-built_in">cos</span>(theta) -<span class="hljs-built_in">sin</span>(theta) <span class="hljs-number">0</span> a;<br>     <span class="hljs-built_in">cos</span>(alpha)*<span class="hljs-built_in">sin</span>(theta) <span class="hljs-built_in">cos</span>(alpha)*<span class="hljs-built_in">cos</span>(theta) -<span class="hljs-built_in">sin</span>(alpha) -d*<span class="hljs-built_in">sin</span>(alpha);<br>     <span class="hljs-built_in">sin</span>(alpha)*<span class="hljs-built_in">sin</span>(theta) <span class="hljs-built_in">sin</span>(alpha)*<span class="hljs-built_in">cos</span>(theta) <span class="hljs-built_in">cos</span>(alpha) d*<span class="hljs-built_in">cos</span>(alpha);<br>     <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span>];<br><br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 1. 计算末坐标系相对于初坐标系的变换矩阵</span><br><span class="hljs-comment">% 2. 在初坐标系中描述末坐标系的原点</span><br><span class="hljs-comment">% @filename: mian.m</span><br><br>clc,clear,close all;<br>syms th1 th2 th3;<br>syms l1 l2 l3;<br>syms d1 d2 d3;<br>syms PI;<br><br>T01 = generate_T(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, th1);<br>T12 = generate_T(-PI/<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, d2, th2);<br>T23 = generate_T(<span class="hljs-number">0</span>, l2, d3, th3);<br>T34 = generate_T(<span class="hljs-number">0</span>, l3, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><br>P = T01*T12*T23*T34;<br>P = subs(P,PI,<span class="hljs-built_in">pi</span>); <span class="hljs-comment">% For solving the problem: cos(pi/2) != 0.</span><br>P_simplify = simplify(P)<br><br>pos = P_simplify(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>, <span class="hljs-number">4</span>)<br><br><span class="hljs-comment">% jacobian(pos, [th1, th2, th3])</span><br><br></code></pre></td></tr></table></figure><h4 id="求雅可比矩阵">求雅可比矩阵</h4><p>根据式（2）对式（13）求偏导得： <span class="math display">\[\delta \pmb{x} =  \begin{bmatrix}-s_1(L_2c_2+L_3c_{23})-c_1(D_2+D_3) &amp;-c_1(L_2s_2+L_3s_{23})&amp;-L_3c_1s_{23}\\c_1(L_2c_2+L_3c_{23})-s_1(D_2+D_3) &amp;-s_1(L_2s_2+L_3s_{23})&amp;-L_3s_1s_{23}\\0 &amp;-L_2c_2-L_3c_{23} &amp;-L_3c_{23}\\\end{bmatrix}\delta \pmb{q}\tag{14}\]</span></p><p>由式（14）得雅可比矩阵为 <span class="math display">\[\pmb{J} =\begin{bmatrix}-s_1(L_2c_2+L_3c_{23})-c_1(D_2+D_3) &amp;-c_1(L_2s_2+L_3s_{23})&amp;-L_3c_1s_{23}\\c_1(L_2c_2+L_3c_{23})-s_1(D_2+D_3) &amp;-s_1(L_2s_2+L_3s_{23})&amp;-L_3s_1s_{23}\\0 &amp;-L_2c_2-L_3c_{23} &amp;-L_3c_{23}\\\end{bmatrix}\tag{15}\]</span></p><p><em>当然，雅可比的计算也可用代码完成，如下所示：</em></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 1. 计算末坐标系相对于初坐标系的变换矩阵</span><br><span class="hljs-comment">% 2. 在初坐标系中描述末坐标系的原点</span><br><span class="hljs-comment">% 3. 计算雅可比矩阵</span><br><span class="hljs-comment">% @filename: mian.m</span><br><br>clc,clear,close all;<br>syms th1 th2 th3;<br>syms l1 l2 l3;<br>syms d1 d2 d3;<br>syms PI;<br><br>T01 = generate_T(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, th1);<br>T12 = generate_T(-PI/<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, d2, th2);<br>T23 = generate_T(<span class="hljs-number">0</span>, l2, d3, th3);<br>T34 = generate_T(<span class="hljs-number">0</span>, l3, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><br>P = T01*T12*T23*T34;<br>P = subs(P,PI,<span class="hljs-built_in">pi</span>);<br>P_simplify = simplify(P)<br><br>pos = P_simplify(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>, <span class="hljs-number">4</span>)<br><br>jacobian(pos, [th1, th2, th3])<br><br></code></pre></td></tr></table></figure><h4 id="假设虚拟力">假设虚拟力</h4><p>假设用一个虚拟构件（弹簧阻尼器）连接机械臂末端和外界，将该虚拟构件产生的作用在机械臂末端点的虚拟力记为<spanclass="math inline">\(F\)</span>，可将虚拟力<spanclass="math inline">\(F\)</span>分解到三个方向，即 <spanclass="math display">\[\pmb{F} =\begin{bmatrix}F_x\\F_y\\F_z\\\end{bmatrix}=\begin{bmatrix}k_x &amp;0 &amp;0\\0 &amp;k_y &amp;0\\0 &amp;0 &amp;k_z\\\end{bmatrix}\begin{bmatrix}x_d - x\\y_d - y\\z_d - z\\\end{bmatrix}+\begin{bmatrix}b_x &amp;0 &amp;0\\0 &amp;b_y &amp;0\\0 &amp;0 &amp;b_z\\\end{bmatrix}\begin{bmatrix}\dot{x_d} - \dot{x}\\\dot{y_d} - \dot{y}\\\dot{z_d} - \dot{z}\\\end{bmatrix}\tag{16}\]</span></p><h4 id="求解扭矩">求解扭矩</h4><p>将式（15）、（16）代入式（6）可得关节力矩。</p><h4 id="代码">代码</h4><p><ahref="https://github.com/HuShanzhi/demo_quadruped_VMC">demo_quadruped_VMC</a></p><h2 id="参考">参考</h2><p>[1] 谢惠祥. 四足机器人对角小跑步态虚拟模型直觉控制方法研究[D].国防科学技术大学[2025]</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs latex">@phdthesis&#123;谢惠祥0四足机器人对角小跑步态虚拟模型直觉控制方法研究,<br>  title=&#123;四足机器人对角小跑步态虚拟模型直觉控制方法研究&#125;,<br>  author=&#123;谢惠祥&#125;,<br>  school=&#123;国防科学技术大学&#125;,<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>机器人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正逆运动学笔记</title>
    <link href="/2023/05/07/%E6%AD%A3%E9%80%86%E8%BF%90%E5%8A%A8%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/05/07/%E6%AD%A3%E9%80%86%E8%BF%90%E5%8A%A8%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="rotation-matrix">Rotation Matrix</h2><p>旋转矩阵的作用：</p><ol type="1"><li>描述物体的姿态；</li><li>将point由某一个frame的表述换到另一个和此frame有相对转动的frame上来表述；</li><li>...</li></ol><h2 id="homogeneous-transformation-matrix">Homogeneous TransformationMatrix</h2><p>齐次变换矩阵...</p><h2 id="forward-kinematics">Forward Kinematics</h2><h3 id="什么是正运动学">什么是正运动学</h3><p>正运动学就是通过关节的驱动来推出机器末端的位姿。</p><h3 id="建立关节坐标系">建立关节坐标系</h3><p>建立坐标系的方法有两种：一种是<strong>克雷格（CraigVersion）</strong>；<del>另一种是<strong>Standard</strong></del>。</p><figure><img src="机械手臂几何描述方式示意图.png"alt="图1 机械手臂几何描述方式示意图" /><figcaption aria-hidden="true">图1机械手臂几何描述方式示意图</figcaption></figure><p>如图1所示，对于一个关节（无论是转动关节还是移动关节），总能找到一个关节轴，记为Axis。当然对于转动关节，Axis就是转轴；对于移动关节，Axis就是移动轴。两个相邻的Axis之间有两种情况：一种是异面直线，一种是共面且平行直线。所以，两个相邻的Axis之间一定存在一条直线。</p><p>如图1所示，对于一个由Joint和Link复合的一个机械结构，一般通过4个参数进行描述<spanclass="math inline">\(\alpha、a、d、\theta\)</span>。其中，<spanclass="math inline">\(\alpha\)</span>表示两个Joint转轴之间的角度，<spanclass="math inline">\(a\)</span>表示两个转轴之间的距离，<spanclass="math inline">\(d\)</span>表示两个Link之间的偏移值，<spanclass="math inline">\(\theta\)</span>表示Joint的转动角度。（<spanclass="math inline">\(\alpha_i, a_i, d_i,\theta_i\)</span>）可以用来表示第i个Joint的信息。对于转动关节来说，它的<spanclass="math inline">\(\theta\)</span>是可变参数；对于移动关节来说，它的<spanclass="math inline">\(d\)</span>是可变参数。</p><p>如图2所示，需要给每个Joint建立坐标系（<spanclass="math inline">\(\widehat{X}_i, \widehat{Y}_i,\widehat{Z}_i\)</span>），其中，<spanclass="math inline">\(\widehat{Z}_i\)</span>沿转轴Axis（转动或移动）的方向。<spanclass="math inline">\(\widehat{X}_i\)</span>有两种情况：一是当<spanclass="math inline">\(a_i \neq 0\)</span>时，它沿着<spanclass="math inline">\(a_i\)</span>的方向；二是当<spanclass="math inline">\(a_i = 0\)</span>时，它与<spanclass="math inline">\(\widehat{Z}_i和\)</span><spanclass="math inline">\(\widehat{Z}_{i+1}\)</span>两者垂直（i.e. 它为<spanclass="math inline">\(\widehat{Z}_i和\)</span><spanclass="math inline">\(\widehat{Z}_{i+1}\)</span>的叉积的单位向量）。<spanclass="math inline">\(\widehat{Y}_i\)</span>与<spanclass="math inline">\(\widehat{X}_i和\)</span><spanclass="math inline">\(\widehat{Z}_{i}\)</span>两者垂直，且遵循右手定则，即<spanclass="math inline">\(\widehat{Y}_i = \widehat{Z}_{i} \times\widehat{X}_{i}\)</span>。<strong>注意Z和X的顺序。</strong></p><figure><img src="建立关节坐标系.png" alt="图2 建立关节坐标系" /><figcaption aria-hidden="true">图2 建立关节坐标系</figcaption></figure><p>上述为普遍地建立坐标系的方法。此外，还有两种特殊情况：一是对于地杆Link0，为了简化计算，<strong>一般都将Link 1的坐标系作为Link0的坐标系。</strong>如果Joint 1是转动关节，则把<spanclass="math inline">\(\theta_1 = 0\)</span>时的Link 1的坐标系作为Link0的坐标系；如果Joint 1是移动关节，则把<span class="math inline">\(d_1  =0\)</span>时的Link 1的坐标系作为Link 0的坐标系。二是对于最后一个Linkn，Joint n无法确定一个<spanclass="math inline">\(a_n\)</span>，进而无法确定<spanclass="math inline">\(\widehat{X}_n\)</span>。一般的解决办法是让<spanclass="math inline">\(\theta_n=0\)</span>时的<spanclass="math inline">\(\widehat{X}_n\)</span>的方向与<spanclass="math inline">\(\widehat{X}_{n-1}\)</span>保持相同（<del>【注】：我感觉是从末端向Axisn做垂线，然后用垂线来确定<spanclass="math inline">\(\widehat{X}_n\)</span></del>）。</p><figure><img src="Link0建立坐标系.png" alt="图3 Link 0建立坐标系" /><figcaption aria-hidden="true">图3 Link 0建立坐标系</figcaption></figure><figure><img src="Linkn建立坐标系.png" alt="图4 Link n建立坐标系" /><figcaption aria-hidden="true">图4 Link n建立坐标系</figcaption></figure><h3 id="杆件之间的变换矩阵">杆件之间的变换矩阵</h3><p><span class="math display">\[^{i-1}P = ^{i-1}_iT^iP \tag{1}\]</span></p><p><img src="两个杆件坐标系转化过程示意图.png"alt="图5 两个杆件坐标系转化过程示意图" /> <span class="math display">\[^{i-1}P = ^{i-1}_RT ^R_QT ^Q_PT ^P_iT ^iP \tag{2}\]</span></p><p><span class="math display">\[\begin{align}^{i-1}_iT &amp;= ^{i-1}_RT ^R_QT ^Q_PT ^P_iT \\&amp;= T_{\widehat{X}_{i-1}}(\alpha_{i-1})T_{\widehat{X}_{R}}(a_{i-1})  T_{\widehat{Z}_{Q}}(\theta_{i})T_{\widehat{Z}_{P}}(d_{i}) \\&amp;=\begin{bmatrix}cos\theta_i&amp;-sin\theta_i&amp;0&amp;a_{i-1}\\cos\alpha_{i-1} sin\theta_i&amp;cos\alpha_{i-1}cos\theta_i&amp;sin\alpha_{i-1} &amp;d_isin\alpha_{i-1} \\-sin\alpha_{i-1} sin\theta_i&amp;-sin\alpha_{i-1}cos\theta_i&amp;cos\alpha_{i-1} &amp;d_icos\alpha_{i-1} \\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\\end{align}\tag{3}\]</span></p><p><del><code>【注】式（3）的结果和林沛群教授课件上的不同，个人感觉是他出错了。</code></del></p><p><code>【注】式（3）有误，应为式（3b）。林是对的。</code> <spanclass="math display">\[\begin{align}^{i-1}_iT &amp;= ^{i-1}_RT ^R_QT ^Q_PT ^P_iT \\&amp;= T_{\widehat{X}_{i-1}}(\alpha_{i-1})T_{\widehat{X}_{R}}(a_{i-1})  T_{\widehat{Z}_{Q}}(\theta_{i})T_{\widehat{Z}_{P}}(d_{i}) \\&amp;=\begin{bmatrix}cos\theta_i&amp;-sin\theta_i&amp;0&amp;a_{i-1}\\cos\alpha_{i-1} sin\theta_i&amp;cos\alpha_{i-1}cos\theta_i&amp;-sin\alpha_{i-1} &amp;-d_isin\alpha_{i-1} \\sin\alpha_{i-1} sin\theta_i&amp;sin\alpha_{i-1}cos\theta_i&amp;cos\alpha_{i-1} &amp;d_icos\alpha_{i-1} \\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\\end{align}\tag{3b}\]</span></p><p><span class="math display">\[\begin{align}T_{\widehat{X}_{i-1}}(\alpha_{i-1}) &amp;=\begin{bmatrix}&amp;&amp;&amp;0\\&amp;R_{\widehat{X}_{i-1}}(\alpha_{i-1})&amp;&amp;0\\&amp;&amp;&amp;0\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\&amp;=\begin{bmatrix}1&amp;0&amp;0&amp;0\\0&amp;cos\alpha_{i-1}&amp;sin\alpha_{i-1}&amp;0\\0&amp;-sin\alpha_{i-1}&amp;cos\alpha_{i-1}&amp;0\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\\end{align}\tag{4}\]</span></p><p><code>【注】式（3）的错误是由式（4）的错误引起的，式（4）应为式（4b）。但是，目前还不知道为什么是式（4b）。</code></p><blockquote><p>现在解释一下为什么是 4b 而不是 4：（<strong>这是因为 Rotation Matrix部分没学好。</strong>）</p><p>我们从 <span class="math inline">\(\widehat{X}_{i-1}\)</span>的方向向 <span class="math inline">\(\widehat{X}_{i-1}\)</span>的负方向看去，坐标系 <span class="math inline">\(\{i-1\}\)</span> 绕<span class="math inline">\(\widehat{X}\)</span>轴<strong>顺时针</strong>旋转 <spanclass="math inline">\(\alpha\)</span> 度获得坐标系 <spanclass="math inline">\(\{R\}\)</span> 。然后，将坐标系 <spanclass="math inline">\(\{R\}\)</span> 的 <spanclass="math inline">\(\widehat{Z}_R\)</span> 和 <spanclass="math inline">\(\widehat{Y}_R\)</span> 轴依次向坐标系 <spanclass="math inline">\(\{i-1\}\)</span>做投影，应该是获得式（4）而不是式（4b），<strong>但是</strong>，<spanclass="math inline">\(\alpha\)</span>角是有方向的，顺时针旋转为负。因此，式（4）应该改为： <spanclass="math display">\[\begin{align}T_{\widehat{X}_{i-1}}(-\alpha_{i-1}) &amp;=\begin{bmatrix}&amp;&amp;&amp;0\\&amp;R_{\widehat{X}_{i-1}}(-\alpha_{i-1})&amp;&amp;0\\&amp;&amp;&amp;0\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\&amp;=\begin{bmatrix}1&amp;0&amp;0&amp;0\\0&amp;cos(-\alpha_{i-1})&amp;sin(-\alpha_{i-1})&amp;0\\0&amp;-sin(-\alpha_{i-1})&amp;cos(-\alpha_{i-1})&amp;0\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\\end{align}\]</span></p><p>做三角变换可得到式 （4b）。</p></blockquote><p><span class="math display">\[\begin{align}T_{\widehat{X}_{i-1}}(\alpha_{i-1}) &amp;=\begin{bmatrix}&amp;&amp;&amp;0\\&amp;R_{\widehat{X}_{i-1}}(\alpha_{i-1})&amp;&amp;0\\&amp;&amp;&amp;0\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\&amp;=\begin{bmatrix}1&amp;0&amp;0&amp;0\\0&amp;cos\alpha_{i-1}&amp;-sin\alpha_{i-1}&amp;0\\0&amp;sin\alpha_{i-1}&amp;cos\alpha_{i-1}&amp;0\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\\end{align}\tag{4b}\]</span></p><p><span class="math display">\[\begin{align}T_{\widehat{X}_{R}}(a_{i-1}) &amp;=\begin{bmatrix}1&amp;0&amp;0&amp;\\0&amp;1&amp;0&amp;P_{\widehat{X}_{R}}(a_{i-1})\\0&amp;0&amp;1&amp;\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\&amp;=\begin{bmatrix}1&amp;0&amp;0&amp;a_{i-1}\\0&amp;1&amp;0&amp;0\\0&amp;0&amp;1&amp;0\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\\end{align}\tag{5}\]</span></p><p><span class="math display">\[\begin{align}T_{\widehat{Z}_{Q}}(\theta_{i}) &amp;=\begin{bmatrix}&amp;&amp;&amp;0\\&amp;R_{\widehat{Z}_{Q}}(\theta_{i})&amp;&amp;0\\&amp;&amp;&amp;0\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\&amp;=\begin{bmatrix}cos\theta_{i}&amp;-sin\theta_{i}&amp;0&amp;0\\sin\theta_{i}&amp;cos\theta_{i}&amp;0&amp;0\\0&amp;0&amp;1&amp;0\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\\end{align}\tag{6}\]</span></p><p><span class="math display">\[\begin{align}T_{\widehat{Z}_{P}}(d_{i}) &amp;=\begin{bmatrix}1&amp;0&amp;0&amp;\\0&amp;1&amp;0&amp;P_{\widehat{Z}_{P}}(d_{i})\\0&amp;0&amp;1&amp;\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\&amp;=\begin{bmatrix}1&amp;0&amp;0&amp;0\\0&amp;1&amp;0&amp;0\\0&amp;0&amp;1&amp;d_{i}\\0&amp;0&amp;0&amp;1\\\end{bmatrix} \\\end{align}\tag{7}\]</span></p><p>进一步，第一个杆件和最后一个杆件之间的变换矩阵为式（8）。</p><p><span class="math display">\[^{0}_nT = ^{0}_1T^{1}_2T^{2}_3T ... ^{n-2}_{n-1}T^{n-1}_{n}T    \tag{8}\]</span></p><h3 id="instance">Instance</h3><p>我们通过一个简单的二连杆进行一次正运动学推导。</p><figure><img src="二连杆示意图.png" alt="图6 二连杆示意图" /><figcaption aria-hidden="true">图6 二连杆示意图</figcaption></figure><p>给图中二连杆的各个关节建立坐标系。</p><blockquote><p>【分析】：</p><ul><li>给Joint 1建立坐标系（即第1个坐标系）：</li></ul><ol type="1"><li><p>Joint 1 和 Joint 2 的转轴Axis垂直于平面，且相互平行。因此，<spanclass="math inline">\(\alpha_1=0\)</span>，<spanclass="math inline">\(a_1=\{link1的长度\}\)</span>；</p></li><li><p><span class="math inline">\(\widehat{X_1}\)</span>的方向沿<spanclass="math inline">\(a_1\)</span>，<spanclass="math inline">\(\widehat{Z_1}\)</span>的方向设为沿Joint1的转轴向外，进而，可得<span class="math inline">\(\widehat{Y_1} =\widehat{X_1}  \times \widehat{Z_1}\)</span>。</p></li></ol><ul><li>给基座建立坐标系（即第0个坐标系）：</li></ul><ol type="1"><li>把<spanclass="math inline">\(\theta_1=0\)</span>时的第1个坐标系作为第0个坐标系。</li></ol><ul><li>给Joint 2建立坐标系（即第2个坐标系）：</li></ul><ol type="1"><li>首先最关键的是要确定<spanclass="math inline">\(\widehat{X_2}\)</span>的方向。将<spanclass="math inline">\(\widehat{X_1}\)</span>的方向作为<spanclass="math inline">\(\theta_2=0\)</span>时的<spanclass="math inline">\(\widehat{X_2}\)</span>的方向；</li><li><span class="math inline">\(\widehat{Z_2}\)</span>的方向设为沿Joint2的转轴向外，进而，可得<span class="math inline">\(\widehat{Y_2} =\widehat{X_2}  \times \widehat{Z_2}\)</span>。</li></ol></blockquote><figure><img src="二连杆建立关节坐标系.png" alt="图7 二连杆建立关节坐标系" /><figcaption aria-hidden="true">图7 二连杆建立关节坐标系</figcaption></figure><table><thead><tr class="header"><th><span class="math inline">\(i\)</span></th><th><span class="math inline">\(\alpha_{i-1}\)</span></th><th><span class="math inline">\(a_{i-1}\)</span></th><th><span class="math inline">\(d_i\)</span></th><th><span class="math inline">\(\theta_{i}\)</span></th></tr></thead><tbody><tr class="odd"><td>1</td><td>0</td><td>0</td><td>0</td><td><span class="math inline">\(\theta_1\)</span></td></tr><tr class="even"><td>2</td><td>0</td><td><span class="math inline">\(L_1\)</span></td><td>0</td><td><span class="math inline">\(\theta_2\)</span></td></tr></tbody></table><p>记二连杆的末端点为<span class="math inline">\(P\)</span>，令<spanclass="math inline">\(P\)</span>在 Joint 2 的坐标系下的位置为<spanclass="math inline">\(^2P = (L_2, 0,0)^T\)</span>。假设基坐标系为世界坐标系。 <span class="math display">\[\begin{bmatrix}&amp; \\^0P \\&amp; \\1 \\  \end{bmatrix}  = ^0_1T ^1_2T\begin{bmatrix}&amp; \\^2P \\&amp; \\1 \\  \end{bmatrix}  \tag{9}\]</span></p><p><span class="math display">\[\begin{align}^0P &amp;=\begin{bmatrix}cos\theta_1&amp;-sin\theta_1&amp;0&amp;a_{0}\\cos\alpha_{0} sin\theta_1&amp;cos\alpha_{0}cos\theta_1&amp;sin\alpha_{0} &amp;d_1sin\alpha_{0} \\-sin\alpha_{0} sin\theta_1&amp;-sin\alpha_{0}cos\theta_1&amp;cos\alpha_{0} &amp;d_1cos\alpha_{0} \\0&amp;0&amp;0&amp;1\\\end{bmatrix}  \begin{bmatrix}cos\theta_2&amp;-sin\theta_2&amp;0&amp;a_{1}\\cos\alpha_{1} sin\theta_2&amp;cos\alpha_{1}cos\theta_2&amp;sin\alpha_{1} &amp;d_2sin\alpha_{1} \\-sin\alpha_{1} sin\theta_2&amp;-sin\alpha_{1}cos\theta_2&amp;cos\alpha_{1} &amp;d_2cos\alpha_{1} \\0&amp;0&amp;0&amp;1\\\end{bmatrix}{^2P}\\&amp;=\begin{bmatrix}cos\theta_1&amp;-sin\theta_1&amp;0&amp;0\\sin\theta_1&amp;cos\theta_1&amp;0 &amp;0 \\0&amp;0&amp;1 &amp;0 \\0&amp;0&amp;0&amp;1\\\end{bmatrix}  \begin{bmatrix}cos\theta_2&amp;-sin\theta_2&amp;0&amp;L_{1}\\sin\theta_2&amp;cos\theta_2&amp;0 &amp;0 \\0&amp;0&amp;1 &amp;0 \\0&amp;0&amp;0&amp;1\\\end{bmatrix}  {^2P} \\&amp;=\begin{bmatrix}cos\theta_{1}cos\theta_2-sin\theta_{1}sin\theta_{2}&amp;-cos\theta_{1}sin\theta_2sin\theta_{1}cos\theta_{2}&amp;0&amp;L_{1}cos\theta_{1}\\sin\theta_1cos\theta_{2}+cos\theta_{1}sin\theta_{2}&amp;-sin\theta_{1}sin\theta_{2}+cos\theta_{1}cos\theta_2&amp;0&amp;L_1sin\theta_{1} \\0&amp;0&amp;1 &amp;0 \\0&amp;0&amp;0&amp;1\\\end{bmatrix}  \begin{bmatrix}L_{2}\\0 \\0 \\1\\\end{bmatrix} \\&amp;=\begin{bmatrix}(cos\theta_{1}cos\theta_2-sin\theta_{1}sin\theta_{2})L_2+L_{1}cos\theta_{1}\\(sin\theta_1cos\theta_{2}+cos\theta_{1}sin\theta_{2})L_2+L_1sin\theta_{1}\\0 \\1\\\end{bmatrix}  \\&amp;=\begin{bmatrix}cos(\theta_{1}+\theta_{2})L_2+L_{1}cos\theta_{1}\\sin(\theta_{1}+\theta_{2})L_2+L_1sin\theta_{1} \\0 \\1\\\end{bmatrix}\end{align}\tag{10}\]</span></p><h2 id="inverse-kinematics">Inverse Kinematics</h2><h3 id="什么是逆运动学">什么是逆运动学</h3><p>逆运动学就是通过机器末端的位姿来反推各个关节的驱动。</p><h3 id="求解方法">求解方法</h3><ul><li>解析法<ul><li>代数和几何方法</li></ul></li><li>数值法<ul><li>用计算机试值</li></ul></li><li>目前大多数机械臂设计成具有解析解<ul><li>对于一个六轴机械臂，设计时让它的相邻三轴相交一点，一般这样的手臂就能找到解析解。目前，机械臂多将后三个轴相交一点。</li></ul></li></ul><h3 id="instance-1">Instance</h3><figure><img src="二连杆逆运动学.png" alt="图8 二连杆逆运动学" /><figcaption aria-hidden="true">图8 二连杆逆运动学</figcaption></figure><p>假设基坐标系为世界坐标系。令<spanclass="math inline">\(P\)</span>为目标点，已知<spanclass="math inline">\(P\)</span>点在世界坐标系的坐标为<spanclass="math inline">\((x, y, z)=(x, y, 0)\)</span>，进而可以推出Joint2坐标系原点的坐标为<span class="math inline">\((x-L_2cos\varphi,y-L_2sin\varphi, 0)\)</span>，因此Joint2坐标系相对于世界坐标系的变换矩阵<spanclass="math inline">\(^0_2T\)</span>可以表示为 <spanclass="math display">\[\begin{bmatrix}cos\varphi&amp;-sin\varphi&amp;0&amp;x-L_2cos\varphi\\sin\varphi&amp;cos\varphi&amp;0&amp;y-L_2sin\varphi \\0&amp;0&amp;1&amp;0 \\0&amp;0&amp;0&amp;1\\\end{bmatrix}\tag{11}\]</span> 根据正运动学公式<spanclass="math inline">\(^0_2T\)</span>还可以表示为 <spanclass="math display">\[\begin{bmatrix}cos\theta_{1}cos\theta_2-sin\theta_{1}sin\theta_{2}&amp;-cos\theta_{1}sin\theta_2-sin\theta_{1}cos\theta_{2}&amp;0&amp;L_{1}cos\theta_{1}\\sin\theta_1cos\theta_{2}+cos\theta_{1}sin\theta_{2}&amp;-sin\theta_{1}sin\theta_{2}+cos\theta_{1}cos\theta_2&amp;0&amp;L_1sin\theta_{1} \\0&amp;0&amp;1 &amp;0 \\0&amp;0&amp;0&amp;1\\\end{bmatrix}\tag{12}\]</span> 根据三角公式进一步化简得 <span class="math display">\[\begin{bmatrix}cos(\theta_{1}+\theta_2)&amp;-sin(\theta_1+\theta_{2})&amp;0&amp;L_{1}cos\theta_{1}\\sin(\theta_1+\theta_{2})&amp;cos(\theta_{1}+\theta_{2})&amp;0&amp;L_1sin\theta_{1} \\0&amp;0&amp;1 &amp;0 \\0&amp;0&amp;0&amp;1\\\end{bmatrix}\tag{13}\]</span></p><h4 id="代数法">代数法</h4><p>联立式（11）和（13）得 <span class="math display">\[\begin{cases}cos\varphi= cos(\theta_1+\theta_2)\\sin\varphi= sin(\theta_1+\theta_2)\\x-L_2cos\varphi=L_1cos\theta_1\\y-L_2sin\varphi=L_1sin\theta_1\\\end{cases}\tag{14}\]</span></p><p><span class="math display">\[\begin{cases}x= L_1cos\theta_1 + L_2cos(\theta_1+\theta_2)\\y= L_1sin\theta_1 + L_2sin(\theta_1+\theta_2)\\\end{cases}\tag{15}\]</span></p><p><span class="math display">\[\begin{align}x^2 + y^2 &amp;= L_1^2 + L_2^2 +2L_1L_2[cos\theta_1cos(\theta_1+\theta_2) +sin\theta_1sin(\theta_1+\theta_2)] \\&amp;= L_1^2 + L_2^2 + 2L_1L_2cos\theta_2\end{align}\tag{16}\]</span></p><p><span class="math display">\[\theta_2 = \pm arccos(\frac{x^2+y^2-L_1^2-L_2^2}{2L_1L_2})\]</span></p><p><span class="math display">\[\begin{cases}x= L_1cos\theta_1 + L_2cos(\theta_1+\theta_2) =(L_1+L_2cos\theta_2)cos\theta_1+(-L_2sin\theta_2)sin\theta_1\\y= L_1sin\theta_1 + L_2sin(\theta_1+\theta_2) =(L_1+L_2cos\theta_2)sin\theta_1 + (\, \, \, \,\,  L_2sin\theta_2)cos\theta_1\\\end{cases}\tag{17}\]</span></p><p><span class="math display">\[\begin{cases}x \triangleq k_1cos\theta_1 - k_2sin\theta_1 \\y \triangleq k_1sin\theta_1 + k_2cos\theta_1\\\end{cases}\tag{18}\]</span></p><p><span class="math display">\[r = + \sqrt{k_1^2+k_2^2} \\\gamma=arctan(k_2/k_1)\tag{19}\]</span></p><p><span class="math display">\[k_1 = r cos\gamma \\k_2 = r sin\gamma\tag{20}\]</span></p><p><span class="math display">\[\begin{cases}\frac{x}{r} = cos\gamma cos\theta_1 - sin\gamma sin\theta_1 = cos(\gamma+ \theta_1) \\\frac{y}{r} = cos\gamma sin\theta_1 - sin\gamma cos\theta_1 = sin(\gamma+ \theta_1)\end{cases}\tag{21}\]</span></p><p><span class="math display">\[tan(\gamma + \theta_1) = y/x \\\theta_1 = arctan(y/x) - \gamma =  arctan(y/x) - arctan(k_2/k_1)\tag{22}\]</span></p><h4 id="几何法">几何法</h4><figure><img src="二连杆逆运动学几何求解法.png"alt="图9 二连杆逆运动学几何求解法" /><figcaption aria-hidden="true">图9 二连杆逆运动学几何求解法</figcaption></figure><p>连接<span class="math inline">\(P\)</span>点和基坐标系原点，记为<spanclass="math inline">\(L_0\)</span>，<span class="math inline">\(L_0 =\sqrt{x^2+y^2}\)</span>。对三角形<spanclass="math inline">\(\bigtriangleup_{L_0L_1L_2}\)</span>做一个余弦定理得<span class="math display">\[L_0^2 = L_1^2 + L_2^2 - 2L_1L_2cos(\pi-\theta_2)\tag{23}\]</span> 进而，解得 <span class="math display">\[cos\theta_2=\frac{x^2+y^2-L_1^2-L_2^2}{2L_1L_2}\\\theta_2 = \pm arccos(\frac{x^2+y^2-L_1^2-L_2^2}{2L_1L_2})\tag{24}\]</span> 由于<spanclass="math inline">\(\varphi\)</span>的限制，上式中<spanclass="math inline">\(\theta_2\)</span>应取正值。然后，可求出<spanclass="math inline">\(\theta_1\)</span>为：<spanclass="math inline">\(\theta_1 = \varphi - \theta_2\)</span>。</p><h2 id="matlab验证">MATLAB验证</h2><h3 id="验证正运动学">验证正运动学</h3><p>二连杆采用Modified DH创建的DH表如下：</p><table><thead><tr class="header"><th><span class="math inline">\(i\)</span></th><th><span class="math inline">\(\alpha_{i-1}\)</span></th><th><span class="math inline">\(a_{i-1}\)</span></th><th><span class="math inline">\(d_i\)</span></th><th><span class="math inline">\(\theta_{i}\)</span></th></tr></thead><tbody><tr class="odd"><td>1</td><td>0</td><td>0</td><td>0</td><td><span class="math inline">\(\theta_1=\pi/2\)</span></td></tr><tr class="even"><td>2</td><td>0</td><td><span class="math inline">\(L_1=5\)</span></td><td>0</td><td><span class="math inline">\(\theta_2 = -\pi/2\)</span></td></tr><tr class="odd"><td>3</td><td>0</td><td><span class="math inline">\(L_2=3\)</span></td><td>0</td><td>0</td></tr></tbody></table><p>利用Robotics SystemToolbox求解正运动学（这里作为标准答案检验我们的矩阵公式法求解的结果是否为真）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 使用的版本是matlab 2021b.</span><br><span class="hljs-comment">% 利用Robotics System Toolbox对平面二连杆进行正运动学计算.</span><br><span class="hljs-comment">% 利用改进D-H（MDH）法建立多轴机器人</span><br>clc;<br>clear;<br>L(<span class="hljs-number">1</span>)=Link(<span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;alpha&#x27;</span>, <span class="hljs-number">0</span>,<span class="hljs-string">&#x27;offset&#x27;</span>,<span class="hljs-built_in">pi</span>/<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;modified&#x27;</span>);<br>L(<span class="hljs-number">2</span>)=Link(<span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">5</span>, <span class="hljs-string">&#x27;alpha&#x27;</span>, <span class="hljs-number">0</span>,<span class="hljs-string">&#x27;offset&#x27;</span>,-<span class="hljs-built_in">pi</span>/<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;modified&#x27;</span>);<br>L(<span class="hljs-number">3</span>)=Link(<span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">3</span>, <span class="hljs-string">&#x27;alpha&#x27;</span>, <span class="hljs-number">0</span>,<span class="hljs-string">&#x27;offset&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;modified&#x27;</span>);<br><br>robot = SerialLink( L,<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;平面二连杆&#x27;</span>) ; <br><br>robot.display();<span class="hljs-comment">% 展示出机器人的信息</span><br>view(<span class="hljs-number">3</span>)<br>teach(robot);<span class="hljs-comment">% 调出示教滑块</span><br><br></code></pre></td></tr></table></figure><figure><img src="利用Robotics%20System%20Toolbox的正运动学求解结果.png"alt="图10 利用Robotics System Toolbox的正运动学求解结果" /><figcaption aria-hidden="true">图10 利用Robotics SystemToolbox的正运动学求解结果</figcaption></figure><p>可以看到末端点的坐标为<span class="math inline">\([3, 5,0]\)</span>。</p><p>利用矩阵公式求解正运动学</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 用于生成一个变换矩阵.</span><br><span class="hljs-comment">% file: generate_T.m</span><br><span class="hljs-comment">% 函数名: generate_T.</span><br><span class="hljs-comment">% Args: </span><br><span class="hljs-comment">%   alpha, a, d, theta.</span><br><span class="hljs-comment">% Return:</span><br><span class="hljs-comment">%   T.</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">T</span> = <span class="hljs-title">generate_T</span><span class="hljs-params">(alpha, a, d, theta)</span></span><br><span class="hljs-comment">% 这里的T矩阵是式（3b）的矩阵</span><br>T = [<span class="hljs-built_in">cos</span>(theta) -<span class="hljs-built_in">sin</span>(theta) <span class="hljs-number">0</span> a;<br>         <span class="hljs-built_in">cos</span>(alpha)*<span class="hljs-built_in">sin</span>(theta) <span class="hljs-built_in">cos</span>(alpha)*<span class="hljs-built_in">cos</span>(theta) -<span class="hljs-built_in">sin</span>(alpha) -d*<span class="hljs-built_in">sin</span>(alpha);<br>         <span class="hljs-built_in">sin</span>(alpha)*<span class="hljs-built_in">sin</span>(theta) <span class="hljs-built_in">sin</span>(alpha)*<span class="hljs-built_in">cos</span>(theta) <span class="hljs-built_in">cos</span>(alpha) d*<span class="hljs-built_in">cos</span>(alpha);<br>         <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span>];<br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 使用的版本是matlab 2021b.</span><br><span class="hljs-comment">% file: forward_kinematics_formula.m</span><br><span class="hljs-comment">% 利用矩阵公式对平面二连杆进行正运动学计算.</span><br><span class="hljs-comment">% 利用改进D-H（MDH）法建立多轴机器人</span><br>T1 = generate_T(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-built_in">pi</span>/<span class="hljs-number">2</span>);<br>T2 = generate_T(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>, -<span class="hljs-built_in">pi</span>/<span class="hljs-number">2</span>);<br>T3 = generate_T(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><br>P = T1*T2*T3<br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs matlab">运行结果：<br>&gt;&gt; forward_kinematics_formula<br><br>P =<br><br>    <span class="hljs-number">1.0000</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">3.0000</span><br>         <span class="hljs-number">0</span>    <span class="hljs-number">1.0000</span>         <span class="hljs-number">0</span>    <span class="hljs-number">5.0000</span><br>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">1.0000</span>         <span class="hljs-number">0</span><br>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">1.0000</span><br></code></pre></td></tr></table></figure><p>可以看到末端点的坐标也为<span class="math inline">\([3, 5,0]\)</span>。</p><h3 id="验证逆运动学">验证逆运动学</h3><p>利用Robotics System Toolbox对平面二连杆进行逆运动学计算</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 使用的版本是matlab 2021b.</span><br><span class="hljs-comment">% file: inverse_kinematics_RT.m</span><br><span class="hljs-comment">% 利用Robotics System Toolbox对平面二连杆进行逆运动学计算.</span><br><span class="hljs-comment">% 利用改进D-H（MDH）法建立多轴机器人</span><br><span class="hljs-comment">% clc;</span><br>clear;<br>L(<span class="hljs-number">1</span>)=Link(<span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;alpha&#x27;</span>, <span class="hljs-number">0</span>,<span class="hljs-string">&#x27;offset&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;modified&#x27;</span>);<br>L(<span class="hljs-number">2</span>)=Link(<span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">5</span>, <span class="hljs-string">&#x27;alpha&#x27;</span>, <span class="hljs-number">0</span>,<span class="hljs-string">&#x27;offset&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;modified&#x27;</span>);<br>L(<span class="hljs-number">3</span>)=Link(<span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">3</span>, <span class="hljs-string">&#x27;alpha&#x27;</span>, <span class="hljs-number">0</span>,<span class="hljs-string">&#x27;offset&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;modified&#x27;</span>);<br><br>robot = SerialLink( L,<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;平面二连杆&#x27;</span>) ; <br><br><span class="hljs-comment">%% 普通机器人的示教展示</span><br><span class="hljs-comment">% robot.display();% 展示出机器人的信息</span><br>view(<span class="hljs-number">3</span>)<br>teach(robot);<span class="hljs-comment">% 调出示教滑块</span><br><br><span class="hljs-comment">%% 机器人的正解函数</span><br><br>theta=[<span class="hljs-built_in">pi</span>/<span class="hljs-number">4</span>,-<span class="hljs-built_in">pi</span>/<span class="hljs-number">3</span>, <span class="hljs-number">0</span>];<br>robot.<span class="hljs-built_in">plot</span>(theta);<br>p=robot.fkine(theta)<br><br><span class="hljs-comment">%% 机器人的逆解</span><br>mask = [<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>];<br>q=ikine(robot,p,<span class="hljs-string">&#x27;mask&#x27;</span>,mask)<br>robot.<span class="hljs-built_in">plot</span>(q);<span class="hljs-comment">%输出机器人模型，后面的三个角为输出时的theta姿态</span><br><br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs matlab">运行结果：<br>&gt;&gt; inverse_kinematics_RT<br> <br>p = <br>    <span class="hljs-number">0.9659</span>    <span class="hljs-number">0.2588</span>         <span class="hljs-number">0</span>     <span class="hljs-number">6.433</span><br>   <span class="hljs-number">-0.2588</span>    <span class="hljs-number">0.9659</span>         <span class="hljs-number">0</span>     <span class="hljs-number">2.759</span><br>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">1</span>         <span class="hljs-number">0</span><br>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">1</span><br><br>q =<br><br>    <span class="hljs-number">0.0249</span>    <span class="hljs-number">1.0472</span>         <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>利用矩阵公式求解逆运动学</p>]]></content>
    
    
    <categories>
      
      <category>机器人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前言</title>
    <link href="/2023/05/04/%E5%89%8D%E8%A8%80/"/>
    <url>/2023/05/04/%E5%89%8D%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>2022年初，我曾经搭建过一次个人博客，也陆续写了几篇博文，但最终没有坚持下去，因为总感觉自己写的技术文章是在抄文档，对自己的帮助也不是很大，而且我工作中的组长也一直给我灌输这种博文毫无意义的思想。</p><p>然而，由于近半年学的东西很杂，我发现很多知识没有得到系统地学习和进一步串联巩固，因此，还是想把写博客的习惯捡起来。于是，我在2023年5月4日第二次搭建了自己的博客。</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
